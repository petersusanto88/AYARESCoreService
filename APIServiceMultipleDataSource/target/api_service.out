
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v1.3.5.RELEASE)

2017-04-05 23:04:09.181  INFO 8172 --- [           main] com.webservicemaster.iirs.Application    : Starting Application v0.1.0 on master.ayares.com with PID 8172 (/opt/ayares/webservice/WebServiceMaster-0.1.0.jar started by root in /opt/ayares/webservice)
2017-04-05 23:04:09.185  INFO 8172 --- [           main] com.webservicemaster.iirs.Application    : No active profile set, falling back to default profiles: default
2017-04-05 23:04:09.257  INFO 8172 --- [           main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2ec67082: startup date [Wed Apr 05 23:04:09 EDT 2017]; root of context hierarchy
2017-04-05 23:04:11.668  INFO 8172 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4a7ca8b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-04-05 23:04:12.242  INFO 8172 --- [           main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 7777 (http)
2017-04-05 23:04:12.262  INFO 8172 --- [           main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2017-04-05 23:04:12.264  INFO 8172 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.0.33
2017-04-05 23:04:12.467  INFO 8172 --- [ost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2017-04-05 23:04:12.467  INFO 8172 --- [ost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 3213 ms
2017-04-05 23:04:14.226  INFO 8172 --- [ost-startStop-1] o.s.b.c.e.ServletRegistrationBean        : Mapping servlet: 'dispatcherServlet' to [/]
2017-04-05 23:04:14.234  INFO 8172 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: 'metricFilter' to: [/*]
2017-04-05 23:04:14.235  INFO 8172 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: 'characterEncodingFilter' to: [/*]
2017-04-05 23:04:14.235  INFO 8172 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-04-05 23:04:14.235  INFO 8172 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-04-05 23:04:14.235  INFO 8172 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: 'requestContextFilter' to: [/*]
2017-04-05 23:04:14.235  INFO 8172 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: 'webRequestLoggingFilter' to: [/*]
2017-04-05 23:04:14.236  INFO 8172 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: 'applicationContextIdFilter' to: [/*]
2017-04-05 23:04:14.581  INFO 8172 --- [           main] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'masterPU'
2017-04-05 23:04:14.594  INFO 8172 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: masterPU
	...]
2017-04-05 23:04:14.681  INFO 8172 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate Core {4.3.11.Final}
2017-04-05 23:04:14.685  INFO 8172 --- [           main] org.hibernate.cfg.Environment            : HHH000205: Loaded properties from resource hibernate.properties: {hibernate.show_sql=true, hibernate.bytecode.use_reflection_optimizer=false, hibernate.format_sql=true}
2017-04-05 23:04:14.686  INFO 8172 --- [           main] org.hibernate.cfg.Environment            : HHH000021: Bytecode provider name : javassist
2017-04-05 23:04:15.001  INFO 8172 --- [           main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2017-04-05 23:04:15.527  INFO 8172 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2017-04-05 23:04:15.713  WARN 8172 --- [           main] org.hibernate.mapping.RootClass          : HHH000038: Composite-id class does not override equals(): com.webservicemaster.iirs.domain.master.ViewFriendList
2017-04-05 23:04:15.713  WARN 8172 --- [           main] org.hibernate.mapping.RootClass          : HHH000039: Composite-id class does not override hashCode(): com.webservicemaster.iirs.domain.master.ViewFriendList
2017-04-05 23:04:15.734  INFO 8172 --- [           main] o.h.h.i.ast.ASTQueryTranslatorFactory    : HHH000397: Using ASTQueryTranslatorFactory
2017-04-05 23:04:16.168  INFO 8172 --- [           main] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'transactionPU'
2017-04-05 23:04:16.169  INFO 8172 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: transactionPU
	...]
2017-04-05 23:04:16.281  INFO 8172 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2017-04-05 23:04:16.292  INFO 8172 --- [           main] o.h.h.i.ast.ASTQueryTranslatorFactory    : HHH000397: Using ASTQueryTranslatorFactory
2017-04-05 23:04:17.216  WARN 8172 --- [           main] o.h.hql.internal.ast.HqlSqlWalker        : [DEPRECATION] Encountered positional parameter near line 1, column 98 in HQL: [ select count(f) from com.webservicemaster.iirs.domain.master.Friendship f where ( f.invitedId = ? ) and f.status = 0 ].  Positional parameter are considered deprecated; use named parameters or JPA-style positional parameters instead.
2017-04-05 23:04:17.914  INFO 8172 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2ec67082: startup date [Wed Apr 05 23:04:09 EDT 2017]; root of context hierarchy
2017-04-05 23:04:18.014  INFO 8172 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/login],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.doLogin(java.lang.String) throws java.lang.Exception
2017-04-05 23:04:18.017  INFO 8172 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/uploadPhoto],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.uploadPhoto(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2017-04-05 23:04:18.018  INFO 8172 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/forgotPassword],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.forgotPassword(java.lang.String) throws java.lang.Exception
2017-04-05 23:04:18.018  INFO 8172 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/updatePassword],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.updatePassword(java.lang.String,int,java.lang.String) throws java.lang.Exception
2017-04-05 23:04:18.018  INFO 8172 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/updateProfile],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.updateProfile(java.lang.String,int,java.lang.String) throws java.lang.Exception
2017-04-05 23:04:18.019  INFO 8172 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/inviteFriendViaQRCode],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.inviteFriendViaQRCode(java.lang.String,long,java.lang.String) throws java.lang.Exception
2017-04-05 23:04:18.020  INFO 8172 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/inviteJustFriend],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.inviteJustFriend(java.lang.String,int,java.lang.String) throws java.lang.Exception
2017-04-05 23:04:18.020  INFO 8172 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/confirmFriendship],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.confirmFriendship(java.lang.String,long,java.lang.String) throws java.lang.Exception
2017-04-05 23:04:18.021  INFO 8172 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/getFriendRequest],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.getFriendRequest(java.lang.String,long) throws java.lang.Exception
2017-04-05 23:04:18.021  INFO 8172 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/getMobileContent],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.getMobileContent(java.lang.String) throws java.lang.Exception
2017-04-05 23:04:18.022  INFO 8172 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/getAdvertisement],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.getAdvertisement(java.lang.String,long) throws java.lang.Exception
2017-04-05 23:04:18.022  INFO 8172 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/getFriendList],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.getFriendList(java.lang.String,long,java.lang.String) throws java.lang.Exception
2017-04-05 23:04:18.023  INFO 8172 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/updateNotificationSetting],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.updateNotificationSetting(java.lang.String,long,java.lang.String) throws java.lang.Exception
2017-04-05 23:04:18.023  INFO 8172 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/getEVoucher],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.getEVoucher(java.lang.String,long) throws java.lang.Exception
2017-04-05 23:04:18.024  INFO 8172 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/getTransactionHistories],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.getTransactionHistories(java.lang.String,int,java.lang.String) throws java.text.ParseException
2017-04-05 23:04:18.024  INFO 8172 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/inviteFriendViaAccountNumber],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.inviteFriendViaAccountNumber(java.lang.String,long,java.lang.String) throws java.lang.Exception
2017-04-05 23:04:18.024  INFO 8172 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/inviteFriendViaPhoneNumber],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.inviteFriendViaPhoneNumber(java.lang.String,long,java.lang.String) throws java.lang.Exception
2017-04-05 23:04:18.028  INFO 8172 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/getMemberDetailById],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.getMemberDetailById(java.lang.String,long,java.lang.String) throws java.lang.Exception
2017-04-05 23:04:18.028  INFO 8172 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/getMemberDetailByPhoneNumber],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.getMemberDetailByPhoneNumber(java.lang.String,long,java.lang.String) throws java.lang.Exception
2017-04-05 23:04:18.029  INFO 8172 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/getFriendProfileById],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.getFriendProfileById(java.lang.String,long,java.lang.String) throws java.lang.Exception
2017-04-05 23:04:18.029  INFO 8172 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/checkPhoneNumberIsMember],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.checkPhoneNumberIsMember(java.lang.String,long,java.lang.String) throws java.lang.Exception
2017-04-05 23:04:18.029  INFO 8172 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/refreshProfile],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.refreshProfile(java.lang.String,int) throws java.lang.Exception
2017-04-05 23:04:18.030  INFO 8172 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/register],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.register(java.lang.String) throws java.lang.Exception
2017-04-05 23:04:18.032  INFO 8172 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/merchant/login],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.MerchantController.doLogin(java.lang.String) throws java.text.ParseException
2017-04-05 23:04:18.032  INFO 8172 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/merchant/getMerchantItem],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.MerchantController.getMerchantItem(java.lang.String,int,java.lang.String) throws java.text.ParseException
2017-04-05 23:04:18.033  INFO 8172 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/merchant/getMerchantItemViaScanBarcode],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.MerchantController.getMerchantItemViaScanBarcode(java.lang.String,int,java.lang.String) throws java.text.ParseException
2017-04-05 23:04:18.035  INFO 8172 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/merchant/transaction/transactionOnMerchantModel1],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.TransactionController.transactionOnMerchantModel1(java.lang.String,int,java.lang.String) throws java.text.ParseException
2017-04-05 23:04:18.035  INFO 8172 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/merchant/transaction/transactionOnMerchantModel2],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.TransactionController.transactionOnMerchantModel2(java.lang.String,int,java.lang.String) throws java.text.ParseException
2017-04-05 23:04:18.036  INFO 8172 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/merchant/transaction/redeemVoucher],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.TransactionController.redeemVoucher(java.lang.String,int,java.lang.String) throws java.text.ParseException
2017-04-05 23:04:18.039  INFO 8172 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-04-05 23:04:18.040  INFO 8172 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-04-05 23:04:19.212  INFO 8172 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-04-05 23:04:19.212  INFO 8172 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-04-05 23:04:19.268  INFO 8172 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-04-05 23:04:19.879  INFO 8172 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/health || /health.json],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(java.security.Principal)
2017-04-05 23:04:19.880  INFO 8172 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-04-05 23:04:19.881  INFO 8172 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-04-05 23:04:19.881  INFO 8172 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/info || /info.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-04-05 23:04:19.882  INFO 8172 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2017-04-05 23:04:19.882  INFO 8172 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env || /env.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-04-05 23:04:19.882  INFO 8172 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-04-05 23:04:19.883  INFO 8172 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2017-04-05 23:04:19.883  INFO 8172 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-04-05 23:04:19.883  INFO 8172 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-04-05 23:04:19.884  INFO 8172 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-04-05 23:04:19.884  INFO 8172 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-04-05 23:04:20.063  INFO 8172 --- [           main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2017-04-05 23:04:20.075  INFO 8172 --- [           main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2017-04-05 23:04:20.281  INFO 8172 --- [           main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 7777 (http)
2017-04-05 23:04:20.286  INFO 8172 --- [           main] com.webservicemaster.iirs.Application    : Started Application in 11.587 seconds (JVM running for 12.129)
2017-04-05 23:04:27.459  INFO 8172 --- [nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-04-05 23:04:27.459  INFO 8172 --- [nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2017-04-05 23:04:27.483  INFO 8172 --- [nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 23 ms
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerName as col_0_0_,
        coalesce(customer0_.customerPhoto,
        '') as col_1_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerName as col_0_0_,
        coalesce(customer0_.customerPhoto,
        '') as col_1_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerName as col_0_0_,
        coalesce(customer0_.customerPhoto,
        '') as col_1_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.userLogin=? 
        and customer0_.userPassword=?
Using MessageDigest: MD5
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        isLogged=?,
        lastLogin=? 
    where
        customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerName as col_0_0_,
        coalesce(customer0_.customerPhoto,
        '') as col_1_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
2017-04-05 23:11:24.589  INFO 8172 --- [       Thread-4] ationConfigEmbeddedWebApplicationContext : Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2ec67082: startup date [Wed Apr 05 23:04:09 EDT 2017]; root of context hierarchy
2017-04-05 23:11:24.607  INFO 8172 --- [       Thread-4] o.s.c.support.DefaultLifecycleProcessor  : Stopping beans in phase 0
2017-04-05 23:11:24.625  INFO 8172 --- [       Thread-4] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans on shutdown
2017-04-05 23:11:24.639  INFO 8172 --- [       Thread-4] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'transactionPU'
2017-04-05 23:11:24.644  INFO 8172 --- [       Thread-4] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'masterPU'

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v1.3.5.RELEASE)

2017-04-05 23:11:29.043  INFO 8547 --- [           main] com.webservicemaster.iirs.Application    : Starting Application v0.1.0 on master.ayares.com with PID 8547 (/opt/ayares/webservice/WebServiceMaster-0.1.0.jar started by root in /opt/ayares/webservice)
2017-04-05 23:11:29.050  INFO 8547 --- [           main] com.webservicemaster.iirs.Application    : No active profile set, falling back to default profiles: default
2017-04-05 23:11:29.127  INFO 8547 --- [           main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2ec67082: startup date [Wed Apr 05 23:11:29 EDT 2017]; root of context hierarchy
2017-04-05 23:11:31.300  INFO 8547 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4a7ca8b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-04-05 23:11:31.850  INFO 8547 --- [           main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 7777 (http)
2017-04-05 23:11:31.871  INFO 8547 --- [           main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2017-04-05 23:11:31.872  INFO 8547 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.0.33
2017-04-05 23:11:32.059  INFO 8547 --- [ost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2017-04-05 23:11:32.059  INFO 8547 --- [ost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2936 ms
2017-04-05 23:11:33.846  INFO 8547 --- [ost-startStop-1] o.s.b.c.e.ServletRegistrationBean        : Mapping servlet: 'dispatcherServlet' to [/]
2017-04-05 23:11:33.854  INFO 8547 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: 'metricFilter' to: [/*]
2017-04-05 23:11:33.854  INFO 8547 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: 'characterEncodingFilter' to: [/*]
2017-04-05 23:11:33.854  INFO 8547 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-04-05 23:11:33.855  INFO 8547 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-04-05 23:11:33.855  INFO 8547 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: 'requestContextFilter' to: [/*]
2017-04-05 23:11:33.855  INFO 8547 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: 'webRequestLoggingFilter' to: [/*]
2017-04-05 23:11:33.855  INFO 8547 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: 'applicationContextIdFilter' to: [/*]
2017-04-05 23:12:13.607  INFO 8547 --- [ost-startStop-1] o.a.c.util.SessionIdGeneratorBase        : Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [39,745] milliseconds.
2017-04-05 23:12:14.075  INFO 8547 --- [           main] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'masterPU'
2017-04-05 23:12:14.091  INFO 8547 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: masterPU
	...]
2017-04-05 23:12:14.208  INFO 8547 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate Core {4.3.11.Final}
2017-04-05 23:12:14.213  INFO 8547 --- [           main] org.hibernate.cfg.Environment            : HHH000205: Loaded properties from resource hibernate.properties: {hibernate.show_sql=true, hibernate.bytecode.use_reflection_optimizer=false, hibernate.format_sql=true}
2017-04-05 23:12:14.214  INFO 8547 --- [           main] org.hibernate.cfg.Environment            : HHH000021: Bytecode provider name : javassist
2017-04-05 23:12:14.701  INFO 8547 --- [           main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2017-04-05 23:12:15.324  INFO 8547 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2017-04-05 23:12:15.484  WARN 8547 --- [           main] org.hibernate.mapping.RootClass          : HHH000038: Composite-id class does not override equals(): com.webservicemaster.iirs.domain.master.ViewFriendList
2017-04-05 23:12:15.485  WARN 8547 --- [           main] org.hibernate.mapping.RootClass          : HHH000039: Composite-id class does not override hashCode(): com.webservicemaster.iirs.domain.master.ViewFriendList
2017-04-05 23:12:15.500  INFO 8547 --- [           main] o.h.h.i.ast.ASTQueryTranslatorFactory    : HHH000397: Using ASTQueryTranslatorFactory
2017-04-05 23:12:15.984  INFO 8547 --- [           main] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'transactionPU'
2017-04-05 23:12:15.985  INFO 8547 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: transactionPU
	...]
2017-04-05 23:12:16.134  INFO 8547 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2017-04-05 23:12:16.152  INFO 8547 --- [           main] o.h.h.i.ast.ASTQueryTranslatorFactory    : HHH000397: Using ASTQueryTranslatorFactory
2017-04-05 23:12:17.226  WARN 8547 --- [           main] o.h.hql.internal.ast.HqlSqlWalker        : [DEPRECATION] Encountered positional parameter near line 1, column 98 in HQL: [ select count(f) from com.webservicemaster.iirs.domain.master.Friendship f where ( f.invitedId = ? ) and f.status = 0 ].  Positional parameter are considered deprecated; use named parameters or JPA-style positional parameters instead.
2017-04-05 23:12:17.885  INFO 8547 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2ec67082: startup date [Wed Apr 05 23:11:29 EDT 2017]; root of context hierarchy
2017-04-05 23:12:17.986  INFO 8547 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/login],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.doLogin(java.lang.String) throws java.lang.Exception
2017-04-05 23:12:17.989  INFO 8547 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/uploadPhoto],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.uploadPhoto(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2017-04-05 23:12:17.989  INFO 8547 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/forgotPassword],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.forgotPassword(java.lang.String) throws java.lang.Exception
2017-04-05 23:12:17.990  INFO 8547 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/updatePassword],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.updatePassword(java.lang.String,int,java.lang.String) throws java.lang.Exception
2017-04-05 23:12:17.990  INFO 8547 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/updateProfile],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.updateProfile(java.lang.String,int,java.lang.String) throws java.lang.Exception
2017-04-05 23:12:17.990  INFO 8547 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/inviteFriendViaQRCode],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.inviteFriendViaQRCode(java.lang.String,long,java.lang.String) throws java.lang.Exception
2017-04-05 23:12:17.991  INFO 8547 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/inviteJustFriend],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.inviteJustFriend(java.lang.String,int,java.lang.String) throws java.lang.Exception
2017-04-05 23:12:17.991  INFO 8547 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/confirmFriendship],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.confirmFriendship(java.lang.String,long,java.lang.String) throws java.lang.Exception
2017-04-05 23:12:17.991  INFO 8547 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/getFriendRequest],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.getFriendRequest(java.lang.String,long) throws java.lang.Exception
2017-04-05 23:12:17.992  INFO 8547 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/getMobileContent],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.getMobileContent(java.lang.String) throws java.lang.Exception
2017-04-05 23:12:17.992  INFO 8547 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/getAdvertisement],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.getAdvertisement(java.lang.String,long) throws java.lang.Exception
2017-04-05 23:12:17.992  INFO 8547 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/getFriendList],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.getFriendList(java.lang.String,long,java.lang.String) throws java.lang.Exception
2017-04-05 23:12:17.993  INFO 8547 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/updateNotificationSetting],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.updateNotificationSetting(java.lang.String,long,java.lang.String) throws java.lang.Exception
2017-04-05 23:12:17.993  INFO 8547 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/getEVoucher],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.getEVoucher(java.lang.String,long) throws java.lang.Exception
2017-04-05 23:12:17.993  INFO 8547 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/getTransactionHistories],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.getTransactionHistories(java.lang.String,int,java.lang.String) throws java.text.ParseException
2017-04-05 23:12:17.993  INFO 8547 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/inviteFriendViaAccountNumber],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.inviteFriendViaAccountNumber(java.lang.String,long,java.lang.String) throws java.lang.Exception
2017-04-05 23:12:17.994  INFO 8547 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/inviteFriendViaPhoneNumber],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.inviteFriendViaPhoneNumber(java.lang.String,long,java.lang.String) throws java.lang.Exception
2017-04-05 23:12:17.996  INFO 8547 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/getMemberDetailById],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.getMemberDetailById(java.lang.String,long,java.lang.String) throws java.lang.Exception
2017-04-05 23:12:17.996  INFO 8547 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/getMemberDetailByPhoneNumber],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.getMemberDetailByPhoneNumber(java.lang.String,long,java.lang.String) throws java.lang.Exception
2017-04-05 23:12:17.997  INFO 8547 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/getFriendProfileById],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.getFriendProfileById(java.lang.String,long,java.lang.String) throws java.lang.Exception
2017-04-05 23:12:17.997  INFO 8547 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/checkPhoneNumberIsMember],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.checkPhoneNumberIsMember(java.lang.String,long,java.lang.String) throws java.lang.Exception
2017-04-05 23:12:17.997  INFO 8547 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/refreshProfile],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.refreshProfile(java.lang.String,int) throws java.lang.Exception
2017-04-05 23:12:17.998  INFO 8547 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/register],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.register(java.lang.String) throws java.lang.Exception
2017-04-05 23:12:17.999  INFO 8547 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/merchant/login],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.MerchantController.doLogin(java.lang.String) throws java.text.ParseException
2017-04-05 23:12:17.999  INFO 8547 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/merchant/getMerchantItem],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.MerchantController.getMerchantItem(java.lang.String,int,java.lang.String) throws java.text.ParseException
2017-04-05 23:12:17.999  INFO 8547 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/merchant/getMerchantItemViaScanBarcode],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.MerchantController.getMerchantItemViaScanBarcode(java.lang.String,int,java.lang.String) throws java.text.ParseException
2017-04-05 23:12:18.001  INFO 8547 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/merchant/transaction/transactionOnMerchantModel1],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.TransactionController.transactionOnMerchantModel1(java.lang.String,int,java.lang.String) throws java.text.ParseException
2017-04-05 23:12:18.001  INFO 8547 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/merchant/transaction/transactionOnMerchantModel2],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.TransactionController.transactionOnMerchantModel2(java.lang.String,int,java.lang.String) throws java.text.ParseException
2017-04-05 23:12:18.001  INFO 8547 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/merchant/transaction/redeemVoucher],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.TransactionController.redeemVoucher(java.lang.String,int,java.lang.String) throws java.text.ParseException
2017-04-05 23:12:18.003  INFO 8547 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-04-05 23:12:18.003  INFO 8547 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-04-05 23:12:19.130  INFO 8547 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-04-05 23:12:19.130  INFO 8547 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-04-05 23:12:19.194  INFO 8547 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-04-05 23:12:19.931  INFO 8547 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/health || /health.json],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(java.security.Principal)
2017-04-05 23:12:19.932  INFO 8547 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-04-05 23:12:19.933  INFO 8547 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-04-05 23:12:19.933  INFO 8547 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/info || /info.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-04-05 23:12:19.934  INFO 8547 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2017-04-05 23:12:19.934  INFO 8547 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env || /env.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-04-05 23:12:19.934  INFO 8547 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-04-05 23:12:19.935  INFO 8547 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2017-04-05 23:12:19.935  INFO 8547 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-04-05 23:12:19.935  INFO 8547 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-04-05 23:12:19.936  INFO 8547 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-04-05 23:12:19.936  INFO 8547 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-04-05 23:12:20.120  INFO 8547 --- [           main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2017-04-05 23:12:20.134  INFO 8547 --- [           main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2017-04-05 23:12:20.299  INFO 8547 --- [           main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 7777 (http)
2017-04-05 23:12:20.304  INFO 8547 --- [           main] com.webservicemaster.iirs.Application    : Started Application in 51.74 seconds (JVM running for 52.33)
2017-04-06 04:03:25.464  INFO 8547 --- [nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-04-06 04:03:25.467  INFO 8547 --- [nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2017-04-06 04:03:25.658  INFO 8547 --- [nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 190 ms
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
TEST 123
9a451c4884533696316457626903f019
Hibernate: 
    select
        merchantus0_.userId as col_0_0_,
        merchantus0_.userName as col_1_0_,
        merchant1_.merchantName as col_2_0_,
        merchant1_.logo as col_3_0_,
        merchantbr2_.branchName as col_4_0_,
        merchant1_.merchantId as col_5_0_ 
    from
        ms_merchantuseraccess merchantus0_ cross 
    join
        ms_merchants merchant1_ cross 
    join
        ms_merchantbranches merchantbr2_ 
    where
        merchantus0_.merchantId=merchant1_.merchantId 
        and merchantus0_.branchId=merchantbr2_.branchId 
        and merchantus0_.userLogin=? 
        and merchantus0_.userPassword=?
Using MessageDigest: MD5
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemCategoryId as itemCate1_7_,
        merchantit0_.categoryName as category2_7_,
        merchantit0_.isDelete as isDelete3_7_,
        merchantit0_.merchantId as merchant4_7_,
        merchantit0_.status as status5_7_ 
    from
        ms_merchantitemcategories merchantit0_ 
    where
        merchantit0_.merchantId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemCategoryId as itemCate1_7_,
        merchantit0_.categoryName as category2_7_,
        merchantit0_.isDelete as isDelete3_7_,
        merchantit0_.merchantId as merchant4_7_,
        merchantit0_.status as status5_7_ 
    from
        ms_merchantitemcategories merchantit0_ 
    where
        merchantit0_.merchantId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
TEST 123
9a451c4884533696316457626903f019
Hibernate: 
    select
        merchantus0_.userId as col_0_0_,
        merchantus0_.userName as col_1_0_,
        merchant1_.merchantName as col_2_0_,
        merchant1_.logo as col_3_0_,
        merchantbr2_.branchName as col_4_0_,
        merchant1_.merchantId as col_5_0_ 
    from
        ms_merchantuseraccess merchantus0_ cross 
    join
        ms_merchants merchant1_ cross 
    join
        ms_merchantbranches merchantbr2_ 
    where
        merchantus0_.merchantId=merchant1_.merchantId 
        and merchantus0_.branchId=merchantbr2_.branchId 
        and merchantus0_.userLogin=? 
        and merchantus0_.userPassword=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemCategoryId as itemCate1_7_,
        merchantit0_.categoryName as category2_7_,
        merchantit0_.isDelete as isDelete3_7_,
        merchantit0_.merchantId as merchant4_7_,
        merchantit0_.status as status5_7_ 
    from
        ms_merchantitemcategories merchantit0_ 
    where
        merchantit0_.merchantId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Customer Id : 33
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=? 
        and customer0_.email=? 
        and customer0_.customerPhoneNumber=? 
        and customer0_.sessionToken=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.itemId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.itemId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.itemId=?
Hibernate: 
    CALL sp_save_transaction_model_2(?,?,?,?,?)
Hibernate: 
    CALL sp_transaction_model_2(?,?,?,?)
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.userLogin=? 
        and customer0_.userPassword=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        isLogged=?,
        lastLogin=? 
    where
        customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
TEST 123
9a451c4884533696316457626903f019
Hibernate: 
    select
        merchantus0_.userId as col_0_0_,
        merchantus0_.userName as col_1_0_,
        merchant1_.merchantName as col_2_0_,
        merchant1_.logo as col_3_0_,
        merchantbr2_.branchName as col_4_0_,
        merchant1_.merchantId as col_5_0_ 
    from
        ms_merchantuseraccess merchantus0_ cross 
    join
        ms_merchants merchant1_ cross 
    join
        ms_merchantbranches merchantbr2_ 
    where
        merchantus0_.merchantId=merchant1_.merchantId 
        and merchantus0_.branchId=merchantbr2_.branchId 
        and merchantus0_.userLogin=? 
        and merchantus0_.userPassword=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemCategoryId as itemCate1_7_,
        merchantit0_.categoryName as category2_7_,
        merchantit0_.isDelete as isDelete3_7_,
        merchantit0_.merchantId as merchant4_7_,
        merchantit0_.status as status5_7_ 
    from
        ms_merchantitemcategories merchantit0_ 
    where
        merchantit0_.merchantId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        viewfriend0_.userId as userId1_14_,
        viewfriend0_.friendId as friendId2_14_,
        viewfriend0_.customerName as customer3_14_,
        viewfriend0_.customerPhoto as customer4_14_,
        viewfriend0_.type as type5_14_ 
    from
        v_friendlist viewfriend0_ 
    where
        viewfriend0_.userId=? 
        and viewfriend0_.type<>'special_just_friend' limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        friendship0_.friendId as col_0_0_,
        customer1_.customerName as col_1_0_,
        customer1_.customerPhoto as col_2_0_,
        friendship0_.inviteDateTime as col_3_0_ 
    from
        ms_friendlists friendship0_ cross 
    join
        ms_customers customer1_ 
    where
        friendship0_.invitatorId=customer1_.customerId 
        and friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Customer Id : 20
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=? 
        and customer0_.email=? 
        and customer0_.customerPhoneNumber=? 
        and customer0_.sessionToken=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.itemId=?
Hibernate: 
    CALL sp_save_transaction_model_2(?,?,?,?,?)
Hibernate: 
    CALL sp_transaction_model_2(?,?,?,?)
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Customer Id : 20
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=? 
        and customer0_.email=? 
        and customer0_.customerPhoneNumber=? 
        and customer0_.sessionToken=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Customer Id : 20
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=? 
        and customer0_.email=? 
        and customer0_.customerPhoneNumber=? 
        and customer0_.sessionToken=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemCategoryId as itemCate1_7_,
        merchantit0_.categoryName as category2_7_,
        merchantit0_.isDelete as isDelete3_7_,
        merchantit0_.merchantId as merchant4_7_,
        merchantit0_.status as status5_7_ 
    from
        ms_merchantitemcategories merchantit0_ 
    where
        merchantit0_.merchantId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemCategoryId as itemCate1_7_,
        merchantit0_.categoryName as category2_7_,
        merchantit0_.isDelete as isDelete3_7_,
        merchantit0_.merchantId as merchant4_7_,
        merchantit0_.status as status5_7_ 
    from
        ms_merchantitemcategories merchantit0_ 
    where
        merchantit0_.merchantId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Customer Id : 20
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=? 
        and customer0_.email=? 
        and customer0_.customerPhoneNumber=? 
        and customer0_.sessionToken=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.itemId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.itemId=?
Hibernate: 
    CALL sp_save_transaction_model_2(?,?,?,?,?)
Hibernate: 
    CALL sp_transaction_model_2(?,?,?,?)
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        showVoucherNotification=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        showFriendRequestNotification=? 
    where
        customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemCategoryId as itemCate1_7_,
        merchantit0_.categoryName as category2_7_,
        merchantit0_.isDelete as isDelete3_7_,
        merchantit0_.merchantId as merchant4_7_,
        merchantit0_.status as status5_7_ 
    from
        ms_merchantitemcategories merchantit0_ 
    where
        merchantit0_.merchantId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemCategoryId as itemCate1_7_,
        merchantit0_.categoryName as category2_7_,
        merchantit0_.isDelete as isDelete3_7_,
        merchantit0_.merchantId as merchant4_7_,
        merchantit0_.status as status5_7_ 
    from
        ms_merchantitemcategories merchantit0_ 
    where
        merchantit0_.merchantId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        count(evouchercu0_.voucherCustomerId) as col_0_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_merchantuseraccess merchantus2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evoucherpr1_.merchantId=merchantus2_.merchantId 
        and evouchercu0_.voucherCode=? 
        and merchantus2_.userId=?
Hibernate: 
    select
        evouchercu0_.voucherCustomerId as voucherC1_3_,
        evouchercu0_.customerId as customer2_3_,
        evouchercu0_.endDate as endDate3_3_,
        evouchercu0_.isDelete as isDelete4_3_,
        evouchercu0_.startDate as startDat5_3_,
        evouchercu0_.status as status6_3_,
        evouchercu0_.voucherCode as voucherC7_3_,
        evouchercu0_.voucherId as voucherI8_3_ 
    from
        ms_evouchercustomers evouchercu0_ 
    where
        evouchercu0_.voucherCode=?
Hibernate: 
    CALL sp_redeem_voucher(?,?,?,?)
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        count(evouchercu0_.voucherCustomerId) as col_0_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_merchantuseraccess merchantus2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evoucherpr1_.merchantId=merchantus2_.merchantId 
        and evouchercu0_.voucherCode=? 
        and merchantus2_.userId=?
Hibernate: 
    select
        evouchercu0_.voucherCustomerId as voucherC1_3_,
        evouchercu0_.customerId as customer2_3_,
        evouchercu0_.endDate as endDate3_3_,
        evouchercu0_.isDelete as isDelete4_3_,
        evouchercu0_.startDate as startDat5_3_,
        evouchercu0_.status as status6_3_,
        evouchercu0_.voucherCode as voucherC7_3_,
        evouchercu0_.voucherId as voucherI8_3_ 
    from
        ms_evouchercustomers evouchercu0_ 
    where
        evouchercu0_.voucherCode=?
Hibernate: 
    CALL sp_redeem_voucher(?,?,?,?)
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        count(evouchercu0_.voucherCustomerId) as col_0_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_merchantuseraccess merchantus2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evoucherpr1_.merchantId=merchantus2_.merchantId 
        and evouchercu0_.voucherCode=? 
        and merchantus2_.userId=?
Hibernate: 
    select
        evouchercu0_.voucherCustomerId as voucherC1_3_,
        evouchercu0_.customerId as customer2_3_,
        evouchercu0_.endDate as endDate3_3_,
        evouchercu0_.isDelete as isDelete4_3_,
        evouchercu0_.startDate as startDat5_3_,
        evouchercu0_.status as status6_3_,
        evouchercu0_.voucherCode as voucherC7_3_,
        evouchercu0_.voucherId as voucherI8_3_ 
    from
        ms_evouchercustomers evouchercu0_ 
    where
        evouchercu0_.voucherCode=?
Hibernate: 
    CALL sp_redeem_voucher(?,?,?,?)
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemCategoryId as itemCate1_7_,
        merchantit0_.categoryName as category2_7_,
        merchantit0_.isDelete as isDelete3_7_,
        merchantit0_.merchantId as merchant4_7_,
        merchantit0_.status as status5_7_ 
    from
        ms_merchantitemcategories merchantit0_ 
    where
        merchantit0_.merchantId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemCategoryId as itemCate1_7_,
        merchantit0_.categoryName as category2_7_,
        merchantit0_.isDelete as isDelete3_7_,
        merchantit0_.merchantId as merchant4_7_,
        merchantit0_.status as status5_7_ 
    from
        ms_merchantitemcategories merchantit0_ 
    where
        merchantit0_.merchantId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
TEST 123
9a451c4884533696316457626903f019
Hibernate: 
    select
        merchantus0_.userId as col_0_0_,
        merchantus0_.userName as col_1_0_,
        merchant1_.merchantName as col_2_0_,
        merchant1_.logo as col_3_0_,
        merchantbr2_.branchName as col_4_0_,
        merchant1_.merchantId as col_5_0_ 
    from
        ms_merchantuseraccess merchantus0_ cross 
    join
        ms_merchants merchant1_ cross 
    join
        ms_merchantbranches merchantbr2_ 
    where
        merchantus0_.merchantId=merchant1_.merchantId 
        and merchantus0_.branchId=merchantbr2_.branchId 
        and merchantus0_.userLogin=? 
        and merchantus0_.userPassword=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemCategoryId as itemCate1_7_,
        merchantit0_.categoryName as category2_7_,
        merchantit0_.isDelete as isDelete3_7_,
        merchantit0_.merchantId as merchant4_7_,
        merchantit0_.status as status5_7_ 
    from
        ms_merchantitemcategories merchantit0_ 
    where
        merchantit0_.merchantId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
TEST 123
9a451c4884533696316457626903f019
Hibernate: 
    select
        merchantus0_.userId as col_0_0_,
        merchantus0_.userName as col_1_0_,
        merchant1_.merchantName as col_2_0_,
        merchant1_.logo as col_3_0_,
        merchantbr2_.branchName as col_4_0_,
        merchant1_.merchantId as col_5_0_ 
    from
        ms_merchantuseraccess merchantus0_ cross 
    join
        ms_merchants merchant1_ cross 
    join
        ms_merchantbranches merchantbr2_ 
    where
        merchantus0_.merchantId=merchant1_.merchantId 
        and merchantus0_.branchId=merchantbr2_.branchId 
        and merchantus0_.userLogin=? 
        and merchantus0_.userPassword=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemCategoryId as itemCate1_7_,
        merchantit0_.categoryName as category2_7_,
        merchantit0_.isDelete as isDelete3_7_,
        merchantit0_.merchantId as merchant4_7_,
        merchantit0_.status as status5_7_ 
    from
        ms_merchantitemcategories merchantit0_ 
    where
        merchantit0_.merchantId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
2017-04-06 07:56:52.627 ERROR 8547 --- [nio-7777-exec-9] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NumberFormatException: For input string: ""] with root cause

java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65) ~[na:1.8.0_121]
	at java.lang.Long.parseLong(Long.java:601) ~[na:1.8.0_121]
	at java.lang.Long.parseLong(Long.java:631) ~[na:1.8.0_121]
	at com.webservicemaster.iirs.service.transaction.TransactionServiceImpl.transactionOnMerchantModel2(TransactionServiceImpl.java:194) ~[WebServiceMaster-0.1.0.jar!/:0.1.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_121]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302) ~[spring-aop-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190) ~[spring-aop-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) ~[spring-aop-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99) ~[spring-tx-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281) ~[spring-tx-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96) ~[spring-tx-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) ~[spring-aop-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208) ~[spring-aop-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at com.sun.proxy.$Proxy107.transactionOnMerchantModel2(Unknown Source) ~[na:na]
	at com.webservicemaster.iirs.controller.TransactionController.transactionOnMerchantModel2(TransactionController.java:92) ~[WebServiceMaster-0.1.0.jar!/:0.1.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_121]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:221) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:832) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:743) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:961) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:895) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:967) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:869) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:843) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration$ApplicationContextHeaderFilter.doFilterInternal(EndpointWebMvcAutoConfiguration.java:261) ~[spring-boot-actuator-1.3.5.RELEASE.jar!/:1.3.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:115) ~[spring-boot-actuator-1.3.5.RELEASE.jar!/:1.3.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:103) ~[spring-boot-actuator-1.3.5.RELEASE.jar!/:1.3.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_121]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_121]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_121]

Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemCategoryId as itemCate1_7_,
        merchantit0_.categoryName as category2_7_,
        merchantit0_.isDelete as isDelete3_7_,
        merchantit0_.merchantId as merchant4_7_,
        merchantit0_.status as status5_7_ 
    from
        ms_merchantitemcategories merchantit0_ 
    where
        merchantit0_.merchantId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
2017-04-06 08:00:37.485 ERROR 8547 --- [nio-7777-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NumberFormatException: For input string: ""] with root cause

java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65) ~[na:1.8.0_121]
	at java.lang.Long.parseLong(Long.java:601) ~[na:1.8.0_121]
	at java.lang.Long.parseLong(Long.java:631) ~[na:1.8.0_121]
	at com.webservicemaster.iirs.service.transaction.TransactionServiceImpl.transactionOnMerchantModel2(TransactionServiceImpl.java:194) ~[WebServiceMaster-0.1.0.jar!/:0.1.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_121]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302) ~[spring-aop-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190) ~[spring-aop-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) ~[spring-aop-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99) ~[spring-tx-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281) ~[spring-tx-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96) ~[spring-tx-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) ~[spring-aop-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208) ~[spring-aop-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at com.sun.proxy.$Proxy107.transactionOnMerchantModel2(Unknown Source) ~[na:na]
	at com.webservicemaster.iirs.controller.TransactionController.transactionOnMerchantModel2(TransactionController.java:92) ~[WebServiceMaster-0.1.0.jar!/:0.1.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_121]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:221) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:832) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:743) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:961) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:895) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:967) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:869) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:843) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration$ApplicationContextHeaderFilter.doFilterInternal(EndpointWebMvcAutoConfiguration.java:261) ~[spring-boot-actuator-1.3.5.RELEASE.jar!/:1.3.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:115) ~[spring-boot-actuator-1.3.5.RELEASE.jar!/:1.3.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:103) ~[spring-boot-actuator-1.3.5.RELEASE.jar!/:1.3.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_121]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_121]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_121]

TEST 123
9a451c4884533696316457626903f019
Hibernate: 
    select
        merchantus0_.userId as col_0_0_,
        merchantus0_.userName as col_1_0_,
        merchant1_.merchantName as col_2_0_,
        merchant1_.logo as col_3_0_,
        merchantbr2_.branchName as col_4_0_,
        merchant1_.merchantId as col_5_0_ 
    from
        ms_merchantuseraccess merchantus0_ cross 
    join
        ms_merchants merchant1_ cross 
    join
        ms_merchantbranches merchantbr2_ 
    where
        merchantus0_.merchantId=merchant1_.merchantId 
        and merchantus0_.branchId=merchantbr2_.branchId 
        and merchantus0_.userLogin=? 
        and merchantus0_.userPassword=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.itemCode=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
TEST 123
9a451c4884533696316457626903f019
Hibernate: 
    select
        merchantus0_.userId as col_0_0_,
        merchantus0_.userName as col_1_0_,
        merchant1_.merchantName as col_2_0_,
        merchant1_.logo as col_3_0_,
        merchantbr2_.branchName as col_4_0_,
        merchant1_.merchantId as col_5_0_ 
    from
        ms_merchantuseraccess merchantus0_ cross 
    join
        ms_merchants merchant1_ cross 
    join
        ms_merchantbranches merchantbr2_ 
    where
        merchantus0_.merchantId=merchant1_.merchantId 
        and merchantus0_.branchId=merchantbr2_.branchId 
        and merchantus0_.userLogin=? 
        and merchantus0_.userPassword=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemCategoryId as itemCate1_7_,
        merchantit0_.categoryName as category2_7_,
        merchantit0_.isDelete as isDelete3_7_,
        merchantit0_.merchantId as merchant4_7_,
        merchantit0_.status as status5_7_ 
    from
        ms_merchantitemcategories merchantit0_ 
    where
        merchantit0_.merchantId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
2017-04-06 08:06:11.950 ERROR 8547 --- [io-7777-exec-10] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NumberFormatException: For input string: ""] with root cause

java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65) ~[na:1.8.0_121]
	at java.lang.Long.parseLong(Long.java:601) ~[na:1.8.0_121]
	at java.lang.Long.parseLong(Long.java:631) ~[na:1.8.0_121]
	at com.webservicemaster.iirs.service.transaction.TransactionServiceImpl.transactionOnMerchantModel2(TransactionServiceImpl.java:194) ~[WebServiceMaster-0.1.0.jar!/:0.1.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_121]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302) ~[spring-aop-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190) ~[spring-aop-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) ~[spring-aop-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99) ~[spring-tx-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281) ~[spring-tx-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96) ~[spring-tx-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) ~[spring-aop-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208) ~[spring-aop-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at com.sun.proxy.$Proxy107.transactionOnMerchantModel2(Unknown Source) ~[na:na]
	at com.webservicemaster.iirs.controller.TransactionController.transactionOnMerchantModel2(TransactionController.java:92) ~[WebServiceMaster-0.1.0.jar!/:0.1.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_121]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:221) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:832) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:743) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:961) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:895) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:967) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:869) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:843) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration$ApplicationContextHeaderFilter.doFilterInternal(EndpointWebMvcAutoConfiguration.java:261) ~[spring-boot-actuator-1.3.5.RELEASE.jar!/:1.3.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:115) ~[spring-boot-actuator-1.3.5.RELEASE.jar!/:1.3.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:103) ~[spring-boot-actuator-1.3.5.RELEASE.jar!/:1.3.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_121]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_121]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_121]

Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
2017-04-06 08:06:49.057 ERROR 8547 --- [nio-7777-exec-7] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NumberFormatException: For input string: ""] with root cause

java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65) ~[na:1.8.0_121]
	at java.lang.Long.parseLong(Long.java:601) ~[na:1.8.0_121]
	at java.lang.Long.parseLong(Long.java:631) ~[na:1.8.0_121]
	at com.webservicemaster.iirs.service.transaction.TransactionServiceImpl.transactionOnMerchantModel2(TransactionServiceImpl.java:194) ~[WebServiceMaster-0.1.0.jar!/:0.1.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_121]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302) ~[spring-aop-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190) ~[spring-aop-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) ~[spring-aop-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99) ~[spring-tx-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281) ~[spring-tx-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96) ~[spring-tx-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) ~[spring-aop-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208) ~[spring-aop-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at com.sun.proxy.$Proxy107.transactionOnMerchantModel2(Unknown Source) ~[na:na]
	at com.webservicemaster.iirs.controller.TransactionController.transactionOnMerchantModel2(TransactionController.java:92) ~[WebServiceMaster-0.1.0.jar!/:0.1.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_121]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_121]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_121]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:221) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:832) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:743) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:961) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:895) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:967) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:869) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:843) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration$ApplicationContextHeaderFilter.doFilterInternal(EndpointWebMvcAutoConfiguration.java:261) ~[spring-boot-actuator-1.3.5.RELEASE.jar!/:1.3.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:115) ~[spring-boot-actuator-1.3.5.RELEASE.jar!/:1.3.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:103) ~[spring-boot-actuator-1.3.5.RELEASE.jar!/:1.3.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_121]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_121]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_121]

Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.itemCode=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemCategoryId as itemCate1_7_,
        merchantit0_.categoryName as category2_7_,
        merchantit0_.isDelete as isDelete3_7_,
        merchantit0_.merchantId as merchant4_7_,
        merchantit0_.status as status5_7_ 
    from
        ms_merchantitemcategories merchantit0_ 
    where
        merchantit0_.merchantId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemCategoryId as itemCate1_7_,
        merchantit0_.categoryName as category2_7_,
        merchantit0_.isDelete as isDelete3_7_,
        merchantit0_.merchantId as merchant4_7_,
        merchantit0_.status as status5_7_ 
    from
        ms_merchantitemcategories merchantit0_ 
    where
        merchantit0_.merchantId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.itemCode=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.itemCode=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.itemCode=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?, ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?, ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.userLogin=? 
        and customer0_.userPassword=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        isLogged=?,
        lastLogin=? 
    where
        customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.userLogin=? 
        and customer0_.userPassword=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        isLogged=?,
        lastLogin=? 
    where
        customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.userLogin=? 
        and customer0_.userPassword=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        isLogged=?,
        lastLogin=? 
    where
        customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=? 
        and customer0_.email=? 
        and customer0_.customerPhoneNumber=? 
        and customer0_.sessionToken=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitatorId=? 
        and friendship0_.invitedId=? 
        or friendship0_.invitedId=? 
        and friendship0_.invitatorId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
TEST 123
9a451c4884533696316457626903f019
Hibernate: 
    select
        merchantus0_.userId as col_0_0_,
        merchantus0_.userName as col_1_0_,
        merchant1_.merchantName as col_2_0_,
        merchant1_.logo as col_3_0_,
        merchantbr2_.branchName as col_4_0_,
        merchant1_.merchantId as col_5_0_ 
    from
        ms_merchantuseraccess merchantus0_ cross 
    join
        ms_merchants merchant1_ cross 
    join
        ms_merchantbranches merchantbr2_ 
    where
        merchantus0_.merchantId=merchant1_.merchantId 
        and merchantus0_.branchId=merchantbr2_.branchId 
        and merchantus0_.userLogin=? 
        and merchantus0_.userPassword=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemCategoryId as itemCate1_7_,
        merchantit0_.categoryName as category2_7_,
        merchantit0_.isDelete as isDelete3_7_,
        merchantit0_.merchantId as merchant4_7_,
        merchantit0_.status as status5_7_ 
    from
        ms_merchantitemcategories merchantit0_ 
    where
        merchantit0_.merchantId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.itemCode=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.itemCode=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemCategoryId as itemCate1_7_,
        merchantit0_.categoryName as category2_7_,
        merchantit0_.isDelete as isDelete3_7_,
        merchantit0_.merchantId as merchant4_7_,
        merchantit0_.status as status5_7_ 
    from
        ms_merchantitemcategories merchantit0_ 
    where
        merchantit0_.merchantId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.itemCode=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemCategoryId as itemCate1_7_,
        merchantit0_.categoryName as category2_7_,
        merchantit0_.isDelete as isDelete3_7_,
        merchantit0_.merchantId as merchant4_7_,
        merchantit0_.status as status5_7_ 
    from
        ms_merchantitemcategories merchantit0_ 
    where
        merchantit0_.merchantId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.itemCode=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemCategoryId as itemCate1_7_,
        merchantit0_.categoryName as category2_7_,
        merchantit0_.isDelete as isDelete3_7_,
        merchantit0_.merchantId as merchant4_7_,
        merchantit0_.status as status5_7_ 
    from
        ms_merchantitemcategories merchantit0_ 
    where
        merchantit0_.merchantId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.itemCode=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.itemCode=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.itemCode=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemCategoryId as itemCate1_7_,
        merchantit0_.categoryName as category2_7_,
        merchantit0_.isDelete as isDelete3_7_,
        merchantit0_.merchantId as merchant4_7_,
        merchantit0_.status as status5_7_ 
    from
        ms_merchantitemcategories merchantit0_ 
    where
        merchantit0_.merchantId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.itemCode=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemCategoryId as itemCate1_7_,
        merchantit0_.categoryName as category2_7_,
        merchantit0_.isDelete as isDelete3_7_,
        merchantit0_.merchantId as merchant4_7_,
        merchantit0_.status as status5_7_ 
    from
        ms_merchantitemcategories merchantit0_ 
    where
        merchantit0_.merchantId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.itemCode=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.itemCode=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.itemCode=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.itemCode=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemCategoryId as itemCate1_7_,
        merchantit0_.categoryName as category2_7_,
        merchantit0_.isDelete as isDelete3_7_,
        merchantit0_.merchantId as merchant4_7_,
        merchantit0_.status as status5_7_ 
    from
        ms_merchantitemcategories merchantit0_ 
    where
        merchantit0_.merchantId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.itemCode=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemCategoryId as itemCate1_7_,
        merchantit0_.categoryName as category2_7_,
        merchantit0_.isDelete as isDelete3_7_,
        merchantit0_.merchantId as merchant4_7_,
        merchantit0_.status as status5_7_ 
    from
        ms_merchantitemcategories merchantit0_ 
    where
        merchantit0_.merchantId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?, ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?, ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?, ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?, ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?, ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        viewfriend0_.userId as userId1_14_,
        viewfriend0_.friendId as friendId2_14_,
        viewfriend0_.customerName as customer3_14_,
        viewfriend0_.customerPhoto as customer4_14_,
        viewfriend0_.type as type5_14_ 
    from
        v_friendlist viewfriend0_ 
    where
        viewfriend0_.userId=? 
        and viewfriend0_.type<>'special_just_friend' limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        friendship0_.friendId as col_0_0_,
        customer1_.customerName as col_1_0_,
        customer1_.customerPhoto as col_2_0_,
        friendship0_.inviteDateTime as col_3_0_ 
    from
        ms_friendlists friendship0_ cross 
    join
        ms_customers customer1_ 
    where
        friendship0_.invitatorId=customer1_.customerId 
        and friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.email=? 
        and customer0_.customerId<>?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=? 
        and customer0_.customerId<>?
Hibernate: 
    update
        ms_customers 
    set
        customerName=?,
        userLogin=?,
        email=?,
        customerPhoneNumber=?,
        customerPhoto=? 
    where
        customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        viewfriend0_.userId as userId1_14_,
        viewfriend0_.friendId as friendId2_14_,
        viewfriend0_.customerName as customer3_14_,
        viewfriend0_.customerPhoto as customer4_14_,
        viewfriend0_.type as type5_14_ 
    from
        v_friendlist viewfriend0_ 
    where
        viewfriend0_.userId=? 
        and viewfriend0_.type<>'special_just_friend' limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        friendship0_.friendId as col_0_0_,
        customer1_.customerName as col_1_0_,
        customer1_.customerPhoto as col_2_0_,
        friendship0_.inviteDateTime as col_3_0_ 
    from
        ms_friendlists friendship0_ cross 
    join
        ms_customers customer1_ 
    where
        friendship0_.invitatorId=customer1_.customerId 
        and friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerName as col_0_0_,
        coalesce(customer0_.customerPhoto,
        '') as col_1_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerName as col_0_0_,
        coalesce(customer0_.customerPhoto,
        '') as col_1_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerName as col_0_0_,
        coalesce(customer0_.customerPhoto,
        '') as col_1_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        showFriendRequestNotification=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        showVoucherNotification=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerName as col_0_0_,
        coalesce(customer0_.customerPhoto,
        '') as col_1_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerName as col_0_0_,
        coalesce(customer0_.customerPhoto,
        '') as col_1_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.userLogin=? 
        and customer0_.userPassword=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        isLogged=?,
        lastLogin=? 
    where
        customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?, ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        friendship0_.friendId as col_0_0_,
        customer1_.customerName as col_1_0_,
        customer1_.customerPhoto as col_2_0_,
        friendship0_.inviteDateTime as col_3_0_ 
    from
        ms_friendlists friendship0_ cross 
    join
        ms_customers customer1_ 
    where
        friendship0_.invitatorId=customer1_.customerId 
        and friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        viewfriend0_.userId as userId1_14_,
        viewfriend0_.friendId as friendId2_14_,
        viewfriend0_.customerName as customer3_14_,
        viewfriend0_.customerPhoto as customer4_14_,
        viewfriend0_.type as type5_14_ 
    from
        v_friendlist viewfriend0_ 
    where
        viewfriend0_.userId=? 
        and viewfriend0_.type<>'special_just_friend' limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Friend Id : 12
Member Id : 3
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitatorId=? 
        and friendship0_.invitedId=? 
        or friendship0_.invitedId=? 
        and friendship0_.invitatorId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
2017-04-07 05:59:03.965  WARN 8547 --- [nio-7777-exec-8] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 0, SQLState: 08S01
2017-04-07 05:59:03.970 ERROR 8547 --- [nio-7777-exec-8] o.h.engine.jdbc.spi.SqlExceptionHelper   : The last packet successfully received from the server was 54,378,506 milliseconds ago.  The last packet sent successfully to the server was 54,378,506 milliseconds ago. is longer than the server configured value of 'wait_timeout'. You should consider either expiring and/or testing connection validity before use in your application, increasing the server configured values for client timeouts, or using the Connector/J connection property 'autoReconnect=true' to avoid this problem.
2017-04-07 05:59:04.034 ERROR 8547 --- [nio-7777-exec-8] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.JDBCConnectionException: could not extract ResultSet] with root cause

java.net.SocketException: Broken pipe (Write failed)
	at java.net.SocketOutputStream.socketWrite0(Native Method) ~[na:1.8.0_121]
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:111) ~[na:1.8.0_121]
	at java.net.SocketOutputStream.write(SocketOutputStream.java:155) ~[na:1.8.0_121]
	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82) ~[na:1.8.0_121]
	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:140) ~[na:1.8.0_121]
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3634) ~[mysql-connector-java-5.1.38.jar!/:5.1.38]
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2460) ~[mysql-connector-java-5.1.38.jar!/:5.1.38]
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2625) ~[mysql-connector-java-5.1.38.jar!/:5.1.38]
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2551) ~[mysql-connector-java-5.1.38.jar!/:5.1.38]
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1861) ~[mysql-connector-java-5.1.38.jar!/:5.1.38]
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:1962) ~[mysql-connector-java-5.1.38.jar!/:5.1.38]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:82) ~[hibernate-core-4.3.11.Final.jar!/:4.3.11.Final]
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2066) ~[hibernate-core-4.3.11.Final.jar!/:4.3.11.Final]
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1863) ~[hibernate-core-4.3.11.Final.jar!/:4.3.11.Final]
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1839) ~[hibernate-core-4.3.11.Final.jar!/:4.3.11.Final]
	at org.hibernate.loader.Loader.doQuery(Loader.java:910) ~[hibernate-core-4.3.11.Final.jar!/:4.3.11.Final]
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:355) ~[hibernate-core-4.3.11.Final.jar!/:4.3.11.Final]
	at org.hibernate.loader.Loader.doList(Loader.java:2554) ~[hibernate-core-4.3.11.Final.jar!/:4.3.11.Final]
	at org.hibernate.loader.Loader.doList(Loader.java:2540) ~[hibernate-core-4.3.11.Final.jar!/:4.3.11.Final]
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2370) ~[hibernate-core-4.3.11.Final.jar!/:4.3.11.Final]
	at org.hibernate.loader.Loader.list(Loader.java:2365) ~[hibernate-core-4.3.11.Final.jar!/:4.3.11.Final]
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:497) ~[hibernate-core-4.3.11.Final.jar!/:4.3.11.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:387) ~[hibernate-core-4.3.11.Final.jar!/:4.3.11.Final]
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:236) ~[hibernate-core-4.3.11.Final.jar!/:4.3.11.Final]
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1300) ~[hibernate-core-4.3.11.Final.jar!/:4.3.11.Final]
	at org.hibernate.internal.QueryImpl.list(QueryImpl.java:103) ~[hibernate-core-4.3.11.Final.jar!/:4.3.11.Final]
	at org.hibernate.jpa.internal.QueryImpl.list(QueryImpl.java:573) ~[hibernate-entitymanager-4.3.11.Final.jar!/:4.3.11.Final]
	at org.hibernate.jpa.internal.QueryImpl.getResultList(QueryImpl.java:449) ~[hibernate-entitymanager-4.3.11.Final.jar!/:4.3.11.Final]
	at sun.reflect.GeneratedMethodAccessor105.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_121]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:368) ~[spring-orm-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at com.sun.proxy.$Proxy119.getResultList(Unknown Source) ~[na:na]
	at com.webservicemaster.iirs.service.transactiondetail.TransactionDetailServiceImpl.getTransactionHistory(TransactionDetailServiceImpl.java:85) ~[WebServiceMaster-0.1.0.jar!/:0.1.0]
	at com.webservicemaster.iirs.controller.CustomerController.getTransactionHistories(CustomerController.java:444) ~[WebServiceMaster-0.1.0.jar!/:0.1.0]
	at sun.reflect.GeneratedMethodAccessor106.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_121]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:221) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:832) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:743) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:961) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:895) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:967) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:869) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:843) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration$ApplicationContextHeaderFilter.doFilterInternal(EndpointWebMvcAutoConfiguration.java:261) ~[spring-boot-actuator-1.3.5.RELEASE.jar!/:1.3.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:115) ~[spring-boot-actuator-1.3.5.RELEASE.jar!/:1.3.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:103) ~[spring-boot-actuator-1.3.5.RELEASE.jar!/:1.3.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_121]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_121]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_121]

Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        viewfriend0_.userId as userId1_14_,
        viewfriend0_.friendId as friendId2_14_,
        viewfriend0_.customerName as customer3_14_,
        viewfriend0_.customerPhoto as customer4_14_,
        viewfriend0_.type as type5_14_ 
    from
        v_friendlist viewfriend0_ 
    where
        viewfriend0_.userId=? 
        and viewfriend0_.type<>'special_just_friend' limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        friendship0_.friendId as col_0_0_,
        customer1_.customerName as col_1_0_,
        customer1_.customerPhoto as col_2_0_,
        friendship0_.inviteDateTime as col_3_0_ 
    from
        ms_friendlists friendship0_ cross 
    join
        ms_customers customer1_ 
    where
        friendship0_.invitatorId=customer1_.customerId 
        and friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.userLogin=? 
        and customer0_.userPassword=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        isLogged=?,
        lastLogin=? 
    where
        customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        viewfriend0_.userId as userId1_14_,
        viewfriend0_.friendId as friendId2_14_,
        viewfriend0_.customerName as customer3_14_,
        viewfriend0_.customerPhoto as customer4_14_,
        viewfriend0_.type as type5_14_ 
    from
        v_friendlist viewfriend0_ 
    where
        viewfriend0_.userId=? 
        and viewfriend0_.type<>'special_just_friend' limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Friend Id : 21
Member Id : 20
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitatorId=? 
        and friendship0_.invitedId=? 
        or friendship0_.invitedId=? 
        and friendship0_.invitatorId=?
Hibernate: 
    select
        customer0_.customerName as col_0_0_,
        coalesce(customer0_.customerPhoto,
        '') as col_1_0_,
        customer0_.customerPhoneNumber as col_2_0_,
        customer0_.email as col_3_0_,
        account1_.accountNumber as col_4_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.accountId 
        and account1_.accountCategory='customer' 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        viewfriend0_.userId as userId1_14_,
        viewfriend0_.friendId as friendId2_14_,
        viewfriend0_.customerName as customer3_14_,
        viewfriend0_.customerPhoto as customer4_14_,
        viewfriend0_.type as type5_14_ 
    from
        v_friendlist viewfriend0_ 
    where
        viewfriend0_.userId=? 
        and viewfriend0_.type<>'special_just_friend' limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Friend Id : 20
Member Id : 20
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitatorId=? 
        and friendship0_.invitedId=? 
        or friendship0_.invitedId=? 
        and friendship0_.invitatorId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        viewfriend0_.userId as userId1_14_,
        viewfriend0_.friendId as friendId2_14_,
        viewfriend0_.customerName as customer3_14_,
        viewfriend0_.customerPhoto as customer4_14_,
        viewfriend0_.type as type5_14_ 
    from
        v_friendlist viewfriend0_ 
    where
        viewfriend0_.userId=? 
        and viewfriend0_.type<>'special_just_friend' limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        friendship0_.friendId as col_0_0_,
        customer1_.customerName as col_1_0_,
        customer1_.customerPhoto as col_2_0_,
        friendship0_.inviteDateTime as col_3_0_ 
    from
        ms_friendlists friendship0_ cross 
    join
        ms_customers customer1_ 
    where
        friendship0_.invitatorId=customer1_.customerId 
        and friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        viewfriend0_.userId as userId1_14_,
        viewfriend0_.friendId as friendId2_14_,
        viewfriend0_.customerName as customer3_14_,
        viewfriend0_.customerPhoto as customer4_14_,
        viewfriend0_.type as type5_14_ 
    from
        v_friendlist viewfriend0_ 
    where
        viewfriend0_.userId=? 
        and viewfriend0_.type<>'special_just_friend' limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        viewfriend0_.userId as userId1_14_,
        viewfriend0_.friendId as friendId2_14_,
        viewfriend0_.customerName as customer3_14_,
        viewfriend0_.customerPhoto as customer4_14_,
        viewfriend0_.type as type5_14_ 
    from
        v_friendlist viewfriend0_ 
    where
        viewfriend0_.userId=? 
        and viewfriend0_.type<>'special_just_friend' limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Friend Id : 17
Member Id : 20
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitatorId=? 
        and friendship0_.invitedId=? 
        or friendship0_.invitedId=? 
        and friendship0_.invitatorId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        viewfriend0_.userId as userId1_14_,
        viewfriend0_.friendId as friendId2_14_,
        viewfriend0_.customerName as customer3_14_,
        viewfriend0_.customerPhoto as customer4_14_,
        viewfriend0_.type as type5_14_ 
    from
        v_friendlist viewfriend0_ 
    where
        viewfriend0_.userId=? 
        and viewfriend0_.type<>'special_just_friend' limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        friendship0_.friendId as col_0_0_,
        customer1_.customerName as col_1_0_,
        customer1_.customerPhoto as col_2_0_,
        friendship0_.inviteDateTime as col_3_0_ 
    from
        ms_friendlists friendship0_ cross 
    join
        ms_customers customer1_ 
    where
        friendship0_.invitatorId=customer1_.customerId 
        and friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.userLogin=? 
        and customer0_.userPassword=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        isLogged=?,
        lastLogin=? 
    where
        customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        friendship0_.friendId as col_0_0_,
        customer1_.customerName as col_1_0_,
        customer1_.customerPhoto as col_2_0_,
        friendship0_.inviteDateTime as col_3_0_ 
    from
        ms_friendlists friendship0_ cross 
    join
        ms_customers customer1_ 
    where
        friendship0_.invitatorId=customer1_.customerId 
        and friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        viewfriend0_.userId as userId1_14_,
        viewfriend0_.friendId as friendId2_14_,
        viewfriend0_.customerName as customer3_14_,
        viewfriend0_.customerPhoto as customer4_14_,
        viewfriend0_.type as type5_14_ 
    from
        v_friendlist viewfriend0_ 
    where
        viewfriend0_.userId=? 
        and viewfriend0_.type<>'special_just_friend' limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        friendship0_.friendId as col_0_0_,
        customer1_.customerName as col_1_0_,
        customer1_.customerPhoto as col_2_0_,
        friendship0_.inviteDateTime as col_3_0_ 
    from
        ms_friendlists friendship0_ cross 
    join
        ms_customers customer1_ 
    where
        friendship0_.invitatorId=customer1_.customerId 
        and friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.userLogin=? 
        and customer0_.userPassword=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        isLogged=?,
        lastLogin=? 
    where
        customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.email=? 
        and customer0_.customerId<>?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=? 
        and customer0_.customerId<>?
Hibernate: 
    update
        ms_customers 
    set
        customerName=?,
        userLogin=?,
        email=?,
        customerPhoneNumber=?,
        customerPhoto=? 
    where
        customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        viewfriend0_.userId as userId1_14_,
        viewfriend0_.friendId as friendId2_14_,
        viewfriend0_.customerName as customer3_14_,
        viewfriend0_.customerPhoto as customer4_14_,
        viewfriend0_.type as type5_14_ 
    from
        v_friendlist viewfriend0_ 
    where
        viewfriend0_.userId=? 
        and viewfriend0_.type<>'special_just_friend' limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        friendship0_.friendId as col_0_0_,
        customer1_.customerName as col_1_0_,
        customer1_.customerPhoto as col_2_0_,
        friendship0_.inviteDateTime as col_3_0_ 
    from
        ms_friendlists friendship0_ cross 
    join
        ms_customers customer1_ 
    where
        friendship0_.invitatorId=customer1_.customerId 
        and friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        showVoucherNotification=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        showFriendRequestNotification=? 
    where
        customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        showVoucherNotification=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        showFriendRequestNotification=? 
    where
        customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        showFriendRequestNotification=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        showVoucherNotification=? 
    where
        customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        friendship0_.friendId as col_0_0_,
        customer1_.customerName as col_1_0_,
        customer1_.customerPhoto as col_2_0_,
        friendship0_.inviteDateTime as col_3_0_ 
    from
        ms_friendlists friendship0_ cross 
    join
        ms_customers customer1_ 
    where
        friendship0_.invitatorId=customer1_.customerId 
        and friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        friendship0_.friendId as col_0_0_,
        customer1_.customerName as col_1_0_,
        customer1_.customerPhoto as col_2_0_,
        friendship0_.inviteDateTime as col_3_0_ 
    from
        ms_friendlists friendship0_ cross 
    join
        ms_customers customer1_ 
    where
        friendship0_.invitatorId=customer1_.customerId 
        and friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        friendship0_.friendId as col_0_0_,
        customer1_.customerName as col_1_0_,
        customer1_.customerPhoto as col_2_0_,
        friendship0_.inviteDateTime as col_3_0_ 
    from
        ms_friendlists friendship0_ cross 
    join
        ms_customers customer1_ 
    where
        friendship0_.invitatorId=customer1_.customerId 
        and friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        viewfriend0_.userId as userId1_14_,
        viewfriend0_.friendId as friendId2_14_,
        viewfriend0_.customerName as customer3_14_,
        viewfriend0_.customerPhoto as customer4_14_,
        viewfriend0_.type as type5_14_ 
    from
        v_friendlist viewfriend0_ 
    where
        viewfriend0_.userId=? 
        and viewfriend0_.type<>'special_just_friend' limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        viewfriend0_.userId as userId1_14_,
        viewfriend0_.friendId as friendId2_14_,
        viewfriend0_.customerName as customer3_14_,
        viewfriend0_.customerPhoto as customer4_14_,
        viewfriend0_.type as type5_14_ 
    from
        v_friendlist viewfriend0_ 
    where
        viewfriend0_.userId=? 
        and viewfriend0_.type<>'special_just_friend' limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Friend Id : 21
Member Id : 20
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitatorId=? 
        and friendship0_.invitedId=? 
        or friendship0_.invitedId=? 
        and friendship0_.invitatorId=?
Hibernate: 
    select
        customer0_.customerName as col_0_0_,
        coalesce(customer0_.customerPhoto,
        '') as col_1_0_,
        customer0_.customerPhoneNumber as col_2_0_,
        customer0_.email as col_3_0_,
        account1_.accountNumber as col_4_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.accountId 
        and account1_.accountCategory='customer' 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        viewfriend0_.userId as userId1_14_,
        viewfriend0_.friendId as friendId2_14_,
        viewfriend0_.customerName as customer3_14_,
        viewfriend0_.customerPhoto as customer4_14_,
        viewfriend0_.type as type5_14_ 
    from
        v_friendlist viewfriend0_ 
    where
        viewfriend0_.userId=? 
        and viewfriend0_.type<>'special_just_friend' limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        viewfriend0_.userId as userId1_14_,
        viewfriend0_.friendId as friendId2_14_,
        viewfriend0_.customerName as customer3_14_,
        viewfriend0_.customerPhoto as customer4_14_,
        viewfriend0_.type as type5_14_ 
    from
        v_friendlist viewfriend0_ 
    where
        viewfriend0_.userId=? 
        and viewfriend0_.type<>'special_just_friend' limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Friend Id : 21
Member Id : 20
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitatorId=? 
        and friendship0_.invitedId=? 
        or friendship0_.invitedId=? 
        and friendship0_.invitatorId=?
Hibernate: 
    select
        customer0_.customerName as col_0_0_,
        coalesce(customer0_.customerPhoto,
        '') as col_1_0_,
        customer0_.customerPhoneNumber as col_2_0_,
        customer0_.email as col_3_0_,
        account1_.accountNumber as col_4_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.accountId 
        and account1_.accountCategory='customer' 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        viewfriend0_.userId as userId1_14_,
        viewfriend0_.friendId as friendId2_14_,
        viewfriend0_.customerName as customer3_14_,
        viewfriend0_.customerPhoto as customer4_14_,
        viewfriend0_.type as type5_14_ 
    from
        v_friendlist viewfriend0_ 
    where
        viewfriend0_.userId=? 
        and viewfriend0_.type<>'special_just_friend' limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemCategoryId as itemCate1_7_,
        merchantit0_.categoryName as category2_7_,
        merchantit0_.isDelete as isDelete3_7_,
        merchantit0_.merchantId as merchant4_7_,
        merchantit0_.status as status5_7_ 
    from
        ms_merchantitemcategories merchantit0_ 
    where
        merchantit0_.merchantId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemCategoryId as itemCate1_7_,
        merchantit0_.categoryName as category2_7_,
        merchantit0_.isDelete as isDelete3_7_,
        merchantit0_.merchantId as merchant4_7_,
        merchantit0_.status as status5_7_ 
    from
        ms_merchantitemcategories merchantit0_ 
    where
        merchantit0_.merchantId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemCategoryId as itemCate1_7_,
        merchantit0_.categoryName as category2_7_,
        merchantit0_.isDelete as isDelete3_7_,
        merchantit0_.merchantId as merchant4_7_,
        merchantit0_.status as status5_7_ 
    from
        ms_merchantitemcategories merchantit0_ 
    where
        merchantit0_.merchantId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemCategoryId as itemCate1_7_,
        merchantit0_.categoryName as category2_7_,
        merchantit0_.isDelete as isDelete3_7_,
        merchantit0_.merchantId as merchant4_7_,
        merchantit0_.status as status5_7_ 
    from
        ms_merchantitemcategories merchantit0_ 
    where
        merchantit0_.merchantId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemCategoryId as itemCate1_7_,
        merchantit0_.categoryName as category2_7_,
        merchantit0_.isDelete as isDelete3_7_,
        merchantit0_.merchantId as merchant4_7_,
        merchantit0_.status as status5_7_ 
    from
        ms_merchantitemcategories merchantit0_ 
    where
        merchantit0_.merchantId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemCategoryId as itemCate1_7_,
        merchantit0_.categoryName as category2_7_,
        merchantit0_.isDelete as isDelete3_7_,
        merchantit0_.merchantId as merchant4_7_,
        merchantit0_.status as status5_7_ 
    from
        ms_merchantitemcategories merchantit0_ 
    where
        merchantit0_.merchantId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemCategoryId as itemCate1_7_,
        merchantit0_.categoryName as category2_7_,
        merchantit0_.isDelete as isDelete3_7_,
        merchantit0_.merchantId as merchant4_7_,
        merchantit0_.status as status5_7_ 
    from
        ms_merchantitemcategories merchantit0_ 
    where
        merchantit0_.merchantId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemCategoryId as itemCate1_7_,
        merchantit0_.categoryName as category2_7_,
        merchantit0_.isDelete as isDelete3_7_,
        merchantit0_.merchantId as merchant4_7_,
        merchantit0_.status as status5_7_ 
    from
        ms_merchantitemcategories merchantit0_ 
    where
        merchantit0_.merchantId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        friendship0_.friendId as col_0_0_,
        customer1_.customerName as col_1_0_,
        customer1_.customerPhoto as col_2_0_,
        friendship0_.inviteDateTime as col_3_0_ 
    from
        ms_friendlists friendship0_ cross 
    join
        ms_customers customer1_ 
    where
        friendship0_.invitatorId=customer1_.customerId 
        and friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        viewfriend0_.userId as userId1_14_,
        viewfriend0_.friendId as friendId2_14_,
        viewfriend0_.customerName as customer3_14_,
        viewfriend0_.customerPhoto as customer4_14_,
        viewfriend0_.type as type5_14_ 
    from
        v_friendlist viewfriend0_ 
    where
        viewfriend0_.userId=? 
        and viewfriend0_.type<>'special_just_friend' limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        showVoucherNotification=? 
    where
        customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        showFriendRequestNotification=? 
    where
        customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
2017-04-09 06:18:49.326  INFO 8547 --- [nio-7777-exec-3] o.a.coyote.http11.Http11NioProcessor     : Error parsing HTTP request header
 Note: further occurrences of HTTP header parsing errors will be logged at DEBUG level.

java.lang.IllegalArgumentException: Invalid character (CR or LF) found in method name
	at org.apache.coyote.http11.AbstractNioInputBuffer.parseRequestLine(AbstractNioInputBuffer.java:228) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1009) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_121]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_121]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_121]

2017-04-09 06:19:16.167 ERROR 8547 --- [nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost]           : Exception Processing ErrorPage[errorCode=0, location=/error]

org.apache.catalina.connector.ClientAbortException: java.io.IOException: Broken pipe
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:393) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.tomcat.util.buf.ByteChunk.flushBuffer(ByteChunk.java:426) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:342) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:317) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:110) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1022) ~[jackson-core-2.6.6.jar!/:2.6.6]
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:891) ~[jackson-databind-2.6.6.jar!/:2.6.6]
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:269) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:100) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:222) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:183) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:81) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:126) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:832) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:743) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:961) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:895) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:967) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:858) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:843) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:720) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:468) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:391) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:318) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:445) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:304) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:181) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_121]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_121]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_121]
Caused by: java.io.IOException: Broken pipe
	at sun.nio.ch.FileDispatcherImpl.write0(Native Method) ~[na:1.8.0_121]
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:47) ~[na:1.8.0_121]
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93) ~[na:1.8.0_121]
	at sun.nio.ch.IOUtil.write(IOUtil.java:65) ~[na:1.8.0_121]
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471) ~[na:1.8.0_121]
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:124) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:172) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.coyote.http11.InternalNioOutputBuffer.writeToSocket(InternalNioOutputBuffer.java:139) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.coyote.http11.InternalNioOutputBuffer.flushBuffer(InternalNioOutputBuffer.java:244) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.coyote.http11.InternalNioOutputBuffer.addToBB(InternalNioOutputBuffer.java:189) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.coyote.http11.InternalNioOutputBuffer.access$000(InternalNioOutputBuffer.java:41) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.coyote.http11.InternalNioOutputBuffer$SocketOutputBuffer.doWrite(InternalNioOutputBuffer.java:320) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.coyote.http11.filters.IdentityOutputFilter.doWrite(IdentityOutputFilter.java:93) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.coyote.http11.AbstractOutputBuffer.doWrite(AbstractOutputBuffer.java:256) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.coyote.Response.doWrite(Response.java:501) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:388) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	... 42 common frames omitted

Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.userLogin=? 
        and customer0_.userPassword=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        isLogged=?,
        lastLogin=? 
    where
        customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
2017-04-10 20:06:33.694  WARN 8547 --- [nio-7777-exec-5] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 0, SQLState: 08S01
2017-04-10 20:06:33.697 ERROR 8547 --- [nio-7777-exec-5] o.h.engine.jdbc.spi.SqlExceptionHelper   : The last packet successfully received from the server was 294,374,016 milliseconds ago.  The last packet sent successfully to the server was 294,374,016 milliseconds ago. is longer than the server configured value of 'wait_timeout'. You should consider either expiring and/or testing connection validity before use in your application, increasing the server configured values for client timeouts, or using the Connector/J connection property 'autoReconnect=true' to avoid this problem.
2017-04-10 20:06:34.934 ERROR 8547 --- [nio-7777-exec-5] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.JDBCConnectionException: could not extract ResultSet] with root cause

java.net.SocketException: Broken pipe (Write failed)
	at java.net.SocketOutputStream.socketWrite0(Native Method) ~[na:1.8.0_121]
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:111) ~[na:1.8.0_121]
	at java.net.SocketOutputStream.write(SocketOutputStream.java:155) ~[na:1.8.0_121]
	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82) ~[na:1.8.0_121]
	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:140) ~[na:1.8.0_121]
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3634) ~[mysql-connector-java-5.1.38.jar!/:5.1.38]
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2460) ~[mysql-connector-java-5.1.38.jar!/:5.1.38]
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2625) ~[mysql-connector-java-5.1.38.jar!/:5.1.38]
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2551) ~[mysql-connector-java-5.1.38.jar!/:5.1.38]
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1861) ~[mysql-connector-java-5.1.38.jar!/:5.1.38]
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:1962) ~[mysql-connector-java-5.1.38.jar!/:5.1.38]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:82) ~[hibernate-core-4.3.11.Final.jar!/:4.3.11.Final]
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2066) ~[hibernate-core-4.3.11.Final.jar!/:4.3.11.Final]
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1863) ~[hibernate-core-4.3.11.Final.jar!/:4.3.11.Final]
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1839) ~[hibernate-core-4.3.11.Final.jar!/:4.3.11.Final]
	at org.hibernate.loader.Loader.doQuery(Loader.java:910) ~[hibernate-core-4.3.11.Final.jar!/:4.3.11.Final]
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:355) ~[hibernate-core-4.3.11.Final.jar!/:4.3.11.Final]
	at org.hibernate.loader.Loader.doList(Loader.java:2554) ~[hibernate-core-4.3.11.Final.jar!/:4.3.11.Final]
	at org.hibernate.loader.Loader.doList(Loader.java:2540) ~[hibernate-core-4.3.11.Final.jar!/:4.3.11.Final]
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2370) ~[hibernate-core-4.3.11.Final.jar!/:4.3.11.Final]
	at org.hibernate.loader.Loader.list(Loader.java:2365) ~[hibernate-core-4.3.11.Final.jar!/:4.3.11.Final]
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:497) ~[hibernate-core-4.3.11.Final.jar!/:4.3.11.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:387) ~[hibernate-core-4.3.11.Final.jar!/:4.3.11.Final]
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:236) ~[hibernate-core-4.3.11.Final.jar!/:4.3.11.Final]
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1300) ~[hibernate-core-4.3.11.Final.jar!/:4.3.11.Final]
	at org.hibernate.internal.QueryImpl.list(QueryImpl.java:103) ~[hibernate-core-4.3.11.Final.jar!/:4.3.11.Final]
	at org.hibernate.jpa.internal.QueryImpl.list(QueryImpl.java:573) ~[hibernate-entitymanager-4.3.11.Final.jar!/:4.3.11.Final]
	at org.hibernate.jpa.internal.QueryImpl.getResultList(QueryImpl.java:449) ~[hibernate-entitymanager-4.3.11.Final.jar!/:4.3.11.Final]
	at sun.reflect.GeneratedMethodAccessor105.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_121]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:368) ~[spring-orm-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at com.sun.proxy.$Proxy119.getResultList(Unknown Source) ~[na:na]
	at com.webservicemaster.iirs.service.transactiondetail.TransactionDetailServiceImpl.getTransactionHistory(TransactionDetailServiceImpl.java:85) ~[WebServiceMaster-0.1.0.jar!/:0.1.0]
	at com.webservicemaster.iirs.controller.CustomerController.getTransactionHistories(CustomerController.java:444) ~[WebServiceMaster-0.1.0.jar!/:0.1.0]
	at sun.reflect.GeneratedMethodAccessor106.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_121]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_121]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:221) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:832) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:743) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:961) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:895) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:967) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:869) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:843) ~[spring-webmvc-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration$ApplicationContextHeaderFilter.doFilterInternal(EndpointWebMvcAutoConfiguration.java:261) ~[spring-boot-actuator-1.3.5.RELEASE.jar!/:1.3.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:115) ~[spring-boot-actuator-1.3.5.RELEASE.jar!/:1.3.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:103) ~[spring-boot-actuator-1.3.5.RELEASE.jar!/:1.3.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.2.6.RELEASE.jar!/:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212) ~[tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_121]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_121]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.0.33.jar!/:8.0.33]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_121]

Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.userLogin=? 
        and customer0_.userPassword=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        isLogged=?,
        lastLogin=? 
    where
        customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.userLogin=? 
        and customer0_.userPassword=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        isLogged=?,
        lastLogin=? 
    where
        customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        friendship0_.friendId as col_0_0_,
        customer1_.customerName as col_1_0_,
        customer1_.customerPhoto as col_2_0_,
        friendship0_.inviteDateTime as col_3_0_ 
    from
        ms_friendlists friendship0_ cross 
    join
        ms_customers customer1_ 
    where
        friendship0_.invitatorId=customer1_.customerId 
        and friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        viewfriend0_.userId as userId1_14_,
        viewfriend0_.friendId as friendId2_14_,
        viewfriend0_.customerName as customer3_14_,
        viewfriend0_.customerPhoto as customer4_14_,
        viewfriend0_.type as type5_14_ 
    from
        v_friendlist viewfriend0_ 
    where
        viewfriend0_.userId=? 
        and viewfriend0_.type<>'special_just_friend' limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Friend Id : 21
Member Id : 20
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitatorId=? 
        and friendship0_.invitedId=? 
        or friendship0_.invitedId=? 
        and friendship0_.invitatorId=?
Hibernate: 
    select
        customer0_.customerName as col_0_0_,
        coalesce(customer0_.customerPhoto,
        '') as col_1_0_,
        customer0_.customerPhoneNumber as col_2_0_,
        customer0_.email as col_3_0_,
        account1_.accountNumber as col_4_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.accountId 
        and account1_.accountCategory='customer' 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        viewfriend0_.userId as userId1_14_,
        viewfriend0_.friendId as friendId2_14_,
        viewfriend0_.customerName as customer3_14_,
        viewfriend0_.customerPhoto as customer4_14_,
        viewfriend0_.type as type5_14_ 
    from
        v_friendlist viewfriend0_ 
    where
        viewfriend0_.userId=? 
        and viewfriend0_.type<>'special_just_friend' limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        viewfriend0_.userId as userId1_14_,
        viewfriend0_.friendId as friendId2_14_,
        viewfriend0_.customerName as customer3_14_,
        viewfriend0_.customerPhoto as customer4_14_,
        viewfriend0_.type as type5_14_ 
    from
        v_friendlist viewfriend0_ 
    where
        viewfriend0_.userId=? 
        and viewfriend0_.type<>'special_just_friend' limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Friend Id : 21
Member Id : 20
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitatorId=? 
        and friendship0_.invitedId=? 
        or friendship0_.invitedId=? 
        and friendship0_.invitatorId=?
Hibernate: 
    select
        customer0_.customerName as col_0_0_,
        coalesce(customer0_.customerPhoto,
        '') as col_1_0_,
        customer0_.customerPhoneNumber as col_2_0_,
        customer0_.email as col_3_0_,
        account1_.accountNumber as col_4_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.accountId 
        and account1_.accountCategory='customer' 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        viewfriend0_.userId as userId1_14_,
        viewfriend0_.friendId as friendId2_14_,
        viewfriend0_.customerName as customer3_14_,
        viewfriend0_.customerPhoto as customer4_14_,
        viewfriend0_.type as type5_14_ 
    from
        v_friendlist viewfriend0_ 
    where
        viewfriend0_.userId=? 
        and viewfriend0_.type<>'special_just_friend' limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Friend Id : 21
Member Id : 20
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitatorId=? 
        and friendship0_.invitedId=? 
        or friendship0_.invitedId=? 
        and friendship0_.invitatorId=?
Hibernate: 
    select
        customer0_.customerName as col_0_0_,
        coalesce(customer0_.customerPhoto,
        '') as col_1_0_,
        customer0_.customerPhoneNumber as col_2_0_,
        customer0_.email as col_3_0_,
        account1_.accountNumber as col_4_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.accountId 
        and account1_.accountCategory='customer' 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        viewfriend0_.userId as userId1_14_,
        viewfriend0_.friendId as friendId2_14_,
        viewfriend0_.customerName as customer3_14_,
        viewfriend0_.customerPhoto as customer4_14_,
        viewfriend0_.type as type5_14_ 
    from
        v_friendlist viewfriend0_ 
    where
        viewfriend0_.userId=? 
        and viewfriend0_.type<>'special_just_friend' limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Friend Id : 21
Member Id : 20
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitatorId=? 
        and friendship0_.invitedId=? 
        or friendship0_.invitedId=? 
        and friendship0_.invitatorId=?
Hibernate: 
    select
        customer0_.customerName as col_0_0_,
        coalesce(customer0_.customerPhoto,
        '') as col_1_0_,
        customer0_.customerPhoneNumber as col_2_0_,
        customer0_.email as col_3_0_,
        account1_.accountNumber as col_4_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.accountId 
        and account1_.accountCategory='customer' 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Friend Id : 21
Member Id : 20
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitatorId=? 
        and friendship0_.invitedId=? 
        or friendship0_.invitedId=? 
        and friendship0_.invitatorId=?
Hibernate: 
    select
        customer0_.customerName as col_0_0_,
        coalesce(customer0_.customerPhoto,
        '') as col_1_0_,
        customer0_.customerPhoneNumber as col_2_0_,
        customer0_.email as col_3_0_,
        account1_.accountNumber as col_4_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.accountId 
        and account1_.accountCategory='customer' 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.userLogin=? 
        and customer0_.userPassword=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        isLogged=?,
        lastLogin=? 
    where
        customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_,
        customer0_.sessionToken as col_12_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
TEST 123
9a451c4884533696316457626903f019
Hibernate: 
    select
        merchantus0_.userId as col_0_0_,
        merchantus0_.userName as col_1_0_,
        merchant1_.merchantName as col_2_0_,
        merchant1_.logo as col_3_0_,
        merchantbr2_.branchName as col_4_0_,
        merchant1_.merchantId as col_5_0_ 
    from
        ms_merchantuseraccess merchantus0_ cross 
    join
        ms_merchants merchant1_ cross 
    join
        ms_merchantbranches merchantbr2_ 
    where
        merchantus0_.merchantId=merchant1_.merchantId 
        and merchantus0_.branchId=merchantbr2_.branchId 
        and merchantus0_.userLogin=? 
        and merchantus0_.userPassword=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        count(merchantus0_.userId) as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.sessionToken=? 
        and merchantus0_.userId=?
Hibernate: 
    select
        case 
            when merchantus0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_merchantuseraccess merchantus0_ 
    where
        merchantus0_.userId=?
Hibernate: 
    update
        ms_merchantuseraccess 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        userId=?
Hibernate: 
    select
        merchantit0_.itemCategoryId as itemCate1_7_,
        merchantit0_.categoryName as category2_7_,
        merchantit0_.isDelete as isDelete3_7_,
        merchantit0_.merchantId as merchant4_7_,
        merchantit0_.status as status5_7_ 
    from
        ms_merchantitemcategories merchantit0_ 
    where
        merchantit0_.merchantId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        merchantit0_.itemId as itemId1_8_,
        merchantit0_.expired as expired2_8_,
        merchantit0_.itemCode as itemCode3_8_,
        merchantit0_.itemName as itemName4_8_,
        merchantit0_.merchantId as merchant5_8_,
        merchantit0_.merchantItemCategoryId as merchant6_8_,
        merchantit0_.price as price7_8_,
        merchantit0_.rebate as rebate8_8_ 
    from
        ms_merchantitems merchantit0_ 
    where
        merchantit0_.merchantId=? 
        and merchantit0_.merchantItemCategoryId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.userLogin=? 
        and customer0_.userPassword=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        isLogged=?,
        lastLogin=? 
    where
        customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.email=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    insert 
    into
        ms_customers
        (acceptTermCondition, customerName, customerPhoneNumber, customerPhoto, email, isLogged, lastActivity, lastLogin, lastUpdate, passwordRetry, registerDate, sessionToken, showFriendRequestNotification, showVoucherNotification, status, tokenExpired, userLogin, userPassword) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    CALL sp_generate_account_number()
Hibernate: 
    insert 
    into
        ms_accounts
        (accountCategory, accountNumber, accountType, balance, memberId, settlementBankCode, status) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=?
Hibernate: 
    insert 
    into
        tr_smsemailqueue
        (body, createDate, destinationAccount, subject, type) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.userLogin=? 
        and customer0_.userPassword=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        isLogged=?,
        lastLogin=? 
    where
        customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.email=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerPhoneNumber=?
Hibernate: 
    insert 
    into
        ms_customers
        (acceptTermCondition, customerName, customerPhoneNumber, customerPhoto, email, isLogged, lastActivity, lastLogin, lastUpdate, passwordRetry, registerDate, sessionToken, showFriendRequestNotification, showVoucherNotification, status, tokenExpired, userLogin, userPassword) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    CALL sp_generate_account_number()
Hibernate: 
    insert 
    into
        ms_accounts
        (accountCategory, accountNumber, accountType, balance, memberId, settlementBankCode, status) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=?
Hibernate: 
    insert 
    into
        tr_smsemailqueue
        (body, createDate, destinationAccount, subject, type) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    select
        customer0_.customerId as col_0_0_,
        customer0_.customerName as col_1_0_,
        customer0_.userLogin as col_2_0_,
        customer0_.email as col_3_0_,
        customer0_.customerPhoneNumber as col_4_0_,
        customer0_.sessionToken as col_5_0_,
        account1_.accountId as col_6_0_,
        account1_.balance as col_7_0_,
        customer0_.customerPhoto as col_8_0_,
        account1_.accountNumber as col_9_0_,
        customer0_.showVoucherNotification as col_10_0_,
        customer0_.showFriendRequestNotification as col_11_0_ 
    from
        ms_customers customer0_ cross 
    join
        ms_accounts account1_ 
    where
        customer0_.customerId=account1_.memberId 
        and customer0_.userLogin=? 
        and customer0_.userPassword=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    update
        ms_customers 
    set
        isLogged=?,
        lastLogin=? 
    where
        customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        (
            friendship0_.invitatorId=? 
            or friendship0_.invitedId=? 
            and friendship0_.invitatorId<>0
        ) 
        and friendship0_.status=1
Hibernate: 
    select
        setting0_.settingId as settingI1_12_,
        setting0_.settingPurpose as settingP2_12_,
        setting0_.settingType as settingT3_12_,
        setting0_.value as value4_12_ 
    from
        ms_settings setting0_ 
    where
        setting0_.settingPurpose=? 
        and setting0_.settingType=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        concat(?,
        advertise0_.file) as col_0_0_ 
    from
        ms_advertises advertise0_ 
    where
        advertise0_.status=1 
        and advertise0_.isDelete=0 
        and (
            CURRENT_DATE between advertise0_.startDate and advertise0_.endDate
        )
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        transactio0_.transDetailId as col_0_0_,
        transactio0_.transId as col_1_0_,
        transactio0_.transactionCodeId as col_2_0_,
        transactio0_.transactionName as col_3_0_,
        transactio0_.accountIdDestination as col_4_0_,
        transactio0_.accountNumberDestination as col_5_0_,
        transactio0_.transType as col_6_0_,
        transactio0_.total as col_7_0_,
        date_format(transactio0_.transactionDate,
        '%Y%m%d%H%i%s') as col_8_0_,
        transactio1_.merchantName as col_9_0_ 
    from
        tr_transactiondetails transactio0_ cross 
    join
        tr_transactions transactio1_ 
    where
        transactio0_.transId=transactio1_.transactionId 
        and transactio0_.accountIdDestination=? limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        evoucherpr1_.productName as col_0_0_,
        evoucherpr1_.photo as col_1_0_,
        evoucherpr1_.voucherValue as col_2_0_,
        evouchercu0_.voucherCode as col_3_0_,
        evouchercu0_.startDate as col_4_0_,
        evouchercu0_.endDate as col_5_0_ 
    from
        ms_evouchercustomers evouchercu0_ cross 
    join
        ms_evoucherproducts evoucherpr1_ cross 
    join
        ms_customers customer2_ 
    where
        evouchercu0_.voucherId=evoucherpr1_.voucherId 
        and evouchercu0_.customerId=customer2_.customerId 
        and evouchercu0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=? 
        and customer0_.email=? 
        and customer0_.customerPhoneNumber=? 
        and customer0_.sessionToken=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitatorId=? 
        and friendship0_.invitedId=? 
        or friendship0_.invitedId=? 
        and friendship0_.invitatorId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitedId=?
Hibernate: 
    insert 
    into
        ms_friendlists
        (confirmDateTime, invitationMethod, invitatorId, inviteDateTime, invitedId, isBlockFutureInvitation, status, type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        customer0_.customerId as customer1_2_,
        customer0_.acceptTermCondition as acceptTe2_2_,
        customer0_.customerName as customer3_2_,
        customer0_.customerPhoneNumber as customer4_2_,
        customer0_.customerPhoto as customer5_2_,
        customer0_.email as email6_2_,
        customer0_.isLogged as isLogged7_2_,
        customer0_.lastActivity as lastActi8_2_,
        customer0_.lastLogin as lastLogi9_2_,
        customer0_.lastUpdate as lastUpd10_2_,
        customer0_.passwordRetry as passwor11_2_,
        customer0_.registerDate as registe12_2_,
        customer0_.sessionToken as session13_2_,
        customer0_.showFriendRequestNotification as showFri14_2_,
        customer0_.showVoucherNotification as showVou15_2_,
        customer0_.status as status16_2_,
        customer0_.tokenExpired as tokenEx17_2_,
        customer0_.userLogin as userLog18_2_,
        customer0_.userPassword as userPas19_2_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        friendship0_.friendId as col_0_0_,
        customer1_.customerName as col_1_0_,
        customer1_.customerPhoto as col_2_0_,
        friendship0_.inviteDateTime as col_3_0_ 
    from
        ms_friendlists friendship0_ cross 
    join
        ms_customers customer1_ 
    where
        friendship0_.invitatorId=customer1_.customerId 
        and friendship0_.invitedId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        friendship0_.friendId as col_0_0_,
        customer1_.customerName as col_1_0_,
        customer1_.customerPhoto as col_2_0_,
        friendship0_.inviteDateTime as col_3_0_ 
    from
        ms_friendlists friendship0_ cross 
    join
        ms_customers customer1_ 
    where
        friendship0_.invitatorId=customer1_.customerId 
        and friendship0_.invitedId=? 
        and friendship0_.status=0
2017-04-11 00:32:33.731  INFO 8547 --- [       Thread-4] ationConfigEmbeddedWebApplicationContext : Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2ec67082: startup date [Wed Apr 05 23:11:29 EDT 2017]; root of context hierarchy
2017-04-11 00:32:33.904  INFO 8547 --- [       Thread-4] o.s.c.support.DefaultLifecycleProcessor  : Stopping beans in phase 0
2017-04-11 00:32:33.965  INFO 8547 --- [       Thread-4] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans on shutdown
2017-04-11 00:32:33.984  INFO 8547 --- [       Thread-4] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'transactionPU'
2017-04-11 00:32:34.023  INFO 8547 --- [       Thread-4] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'masterPU'

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v1.3.5.RELEASE)

2017-04-11 00:44:06.644  INFO 8620 --- [           main] com.webservicemaster.iirs.Application    : Starting Application v0.1.0 on master.ayares.com with PID 8620 (/opt/ayares/webservice/WebServiceMaster-0.1.0.jar started by root in /opt/ayares/webservice)
2017-04-11 00:44:06.649  INFO 8620 --- [           main] com.webservicemaster.iirs.Application    : No active profile set, falling back to default profiles: default
2017-04-11 00:44:06.805  INFO 8620 --- [           main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2ec67082: startup date [Tue Apr 11 00:44:06 EDT 2017]; root of context hierarchy
2017-04-11 00:44:26.785  INFO 8620 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4a7ca8b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-04-11 00:44:29.684  INFO 8620 --- [           main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 7777 (http)
2017-04-11 00:44:29.821  INFO 8620 --- [           main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2017-04-11 00:44:29.826  INFO 8620 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.0.33
2017-04-11 00:44:30.868  INFO 8620 --- [ost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2017-04-11 00:44:30.868  INFO 8620 --- [ost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 24130 ms
2017-04-11 00:44:34.463  INFO 8620 --- [ost-startStop-1] o.s.b.c.e.ServletRegistrationBean        : Mapping servlet: 'dispatcherServlet' to [/]
2017-04-11 00:44:34.578  INFO 8620 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: 'metricFilter' to: [/*]
2017-04-11 00:44:34.580  INFO 8620 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: 'characterEncodingFilter' to: [/*]
2017-04-11 00:44:34.580  INFO 8620 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-04-11 00:44:34.580  INFO 8620 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-04-11 00:44:34.580  INFO 8620 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: 'requestContextFilter' to: [/*]
2017-04-11 00:44:34.581  INFO 8620 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: 'webRequestLoggingFilter' to: [/*]
2017-04-11 00:44:34.581  INFO 8620 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: 'applicationContextIdFilter' to: [/*]
2017-04-11 00:44:45.984  INFO 8620 --- [           main] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'masterPU'
2017-04-11 00:44:46.063  INFO 8620 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: masterPU
	...]
2017-04-11 00:44:47.342  INFO 8620 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate Core {4.3.11.Final}
2017-04-11 00:44:47.347  INFO 8620 --- [           main] org.hibernate.cfg.Environment            : HHH000205: Loaded properties from resource hibernate.properties: {hibernate.show_sql=true, hibernate.bytecode.use_reflection_optimizer=false, hibernate.format_sql=true}
2017-04-11 00:44:47.348  INFO 8620 --- [           main] org.hibernate.cfg.Environment            : HHH000021: Bytecode provider name : javassist
2017-04-11 00:44:47.877  INFO 8620 --- [           main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2017-04-11 00:44:48.595  INFO 8620 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2017-04-11 00:44:48.938  WARN 8620 --- [           main] org.hibernate.mapping.RootClass          : HHH000038: Composite-id class does not override equals(): com.webservicemaster.iirs.domain.master.ViewFriendList
2017-04-11 00:44:48.938  WARN 8620 --- [           main] org.hibernate.mapping.RootClass          : HHH000039: Composite-id class does not override hashCode(): com.webservicemaster.iirs.domain.master.ViewFriendList
2017-04-11 00:44:48.957  INFO 8620 --- [           main] o.h.h.i.ast.ASTQueryTranslatorFactory    : HHH000397: Using ASTQueryTranslatorFactory
2017-04-11 00:44:49.544  INFO 8620 --- [           main] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'transactionPU'
2017-04-11 00:44:49.545  INFO 8620 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: transactionPU
	...]
2017-04-11 00:44:49.796  INFO 8620 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2017-04-11 00:44:49.815  INFO 8620 --- [           main] o.h.h.i.ast.ASTQueryTranslatorFactory    : HHH000397: Using ASTQueryTranslatorFactory
2017-04-11 00:44:51.459  WARN 8620 --- [           main] o.h.hql.internal.ast.HqlSqlWalker        : [DEPRECATION] Encountered positional parameter near line 1, column 98 in HQL: [ select count(f) from com.webservicemaster.iirs.domain.master.Friendship f where ( f.invitedId = ? ) and f.status = 0 ].  Positional parameter are considered deprecated; use named parameters or JPA-style positional parameters instead.
2017-04-11 00:44:53.151  INFO 8620 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2ec67082: startup date [Tue Apr 11 00:44:06 EDT 2017]; root of context hierarchy
2017-04-11 00:44:53.346  INFO 8620 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/login],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.doLogin(java.lang.String) throws java.lang.Exception
2017-04-11 00:44:53.349  INFO 8620 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/uploadPhoto],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.uploadPhoto(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2017-04-11 00:44:53.349  INFO 8620 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/forgotPassword],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.forgotPassword(java.lang.String) throws java.lang.Exception
2017-04-11 00:44:53.350  INFO 8620 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/updatePassword],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.updatePassword(java.lang.String,int,java.lang.String) throws java.lang.Exception
2017-04-11 00:44:53.350  INFO 8620 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/updateProfile],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.updateProfile(java.lang.String,int,java.lang.String) throws java.lang.Exception
2017-04-11 00:44:53.350  INFO 8620 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/inviteFriendViaQRCode],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.inviteFriendViaQRCode(java.lang.String,long,java.lang.String) throws java.lang.Exception
2017-04-11 00:44:53.351  INFO 8620 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/inviteJustFriend],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.inviteJustFriend(java.lang.String,int,java.lang.String) throws java.lang.Exception
2017-04-11 00:44:53.351  INFO 8620 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/confirmFriendship],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.confirmFriendship(java.lang.String,long,java.lang.String) throws java.lang.Exception
2017-04-11 00:44:53.351  INFO 8620 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/getFriendRequest],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.getFriendRequest(java.lang.String,long) throws java.lang.Exception
2017-04-11 00:44:53.351  INFO 8620 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/getMobileContent],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.getMobileContent(java.lang.String) throws java.lang.Exception
2017-04-11 00:44:53.352  INFO 8620 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/getAdvertisement],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.getAdvertisement(java.lang.String,long) throws java.lang.Exception
2017-04-11 00:44:53.352  INFO 8620 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/getFriendList],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.getFriendList(java.lang.String,long,java.lang.String) throws java.lang.Exception
2017-04-11 00:44:53.352  INFO 8620 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/updateNotificationSetting],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.updateNotificationSetting(java.lang.String,long,java.lang.String) throws java.lang.Exception
2017-04-11 00:44:53.353  INFO 8620 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/getEVoucher],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.getEVoucher(java.lang.String,long) throws java.lang.Exception
2017-04-11 00:44:53.353  INFO 8620 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/getTransactionHistories],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.getTransactionHistories(java.lang.String,int,java.lang.String) throws java.text.ParseException
2017-04-11 00:44:53.353  INFO 8620 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/inviteFriendViaAccountNumber],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.inviteFriendViaAccountNumber(java.lang.String,long,java.lang.String) throws java.lang.Exception
2017-04-11 00:44:53.354  INFO 8620 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/inviteFriendViaPhoneNumber],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.inviteFriendViaPhoneNumber(java.lang.String,long,java.lang.String) throws java.lang.Exception
2017-04-11 00:44:53.357  INFO 8620 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/getMemberDetailById],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.getMemberDetailById(java.lang.String,long,java.lang.String) throws java.lang.Exception
2017-04-11 00:44:53.358  INFO 8620 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/getMemberDetailByPhoneNumber],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.getMemberDetailByPhoneNumber(java.lang.String,long,java.lang.String) throws java.lang.Exception
2017-04-11 00:44:53.358  INFO 8620 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/getFriendProfileById],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.getFriendProfileById(java.lang.String,long,java.lang.String) throws java.lang.Exception
2017-04-11 00:44:53.359  INFO 8620 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/checkPhoneNumberIsMember],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.checkPhoneNumberIsMember(java.lang.String,long,java.lang.String) throws java.lang.Exception
2017-04-11 00:44:53.359  INFO 8620 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/refreshProfile],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.refreshProfile(java.lang.String,int) throws java.lang.Exception
2017-04-11 00:44:53.359  INFO 8620 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/member/register],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.CustomerController.register(java.lang.String) throws java.lang.Exception
2017-04-11 00:44:53.360  INFO 8620 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/merchant/login],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.MerchantController.doLogin(java.lang.String) throws java.text.ParseException
2017-04-11 00:44:53.361  INFO 8620 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/merchant/getMerchantItem],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.MerchantController.getMerchantItem(java.lang.String,int,java.lang.String) throws java.text.ParseException
2017-04-11 00:44:53.362  INFO 8620 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/merchant/getMerchantItemViaScanBarcode],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.MerchantController.getMerchantItemViaScanBarcode(java.lang.String,int,java.lang.String) throws java.text.ParseException
2017-04-11 00:44:53.363  INFO 8620 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/merchant/transaction/transactionOnMerchantModel1],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.TransactionController.transactionOnMerchantModel1(java.lang.String,int,java.lang.String) throws java.text.ParseException
2017-04-11 00:44:53.363  INFO 8620 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/merchant/transaction/transactionOnMerchantModel2],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.TransactionController.transactionOnMerchantModel2(java.lang.String,int,java.lang.String) throws java.text.ParseException
2017-04-11 00:44:53.364  INFO 8620 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api.mobile/merchant/transaction/redeemVoucher],methods=[POST],produces=[application/json]}" onto public java.lang.String com.webservicemaster.iirs.controller.TransactionController.redeemVoucher(java.lang.String,int,java.lang.String) throws java.text.ParseException
2017-04-11 00:44:53.366  INFO 8620 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-04-11 00:44:53.367  INFO 8620 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-04-11 00:44:54.567  INFO 8620 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-04-11 00:44:54.672  INFO 8620 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-04-11 00:44:54.739  INFO 8620 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-04-11 00:44:55.413  INFO 8620 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/info || /info.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-04-11 00:44:55.416  INFO 8620 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-04-11 00:44:55.416  INFO 8620 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-04-11 00:44:55.417  INFO 8620 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-04-11 00:44:55.417  INFO 8620 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2017-04-11 00:44:55.418  INFO 8620 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env || /env.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-04-11 00:44:55.418  INFO 8620 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-04-11 00:44:55.419  INFO 8620 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/health || /health.json],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(java.security.Principal)
2017-04-11 00:44:55.419  INFO 8620 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-04-11 00:44:55.420  INFO 8620 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2017-04-11 00:44:55.420  INFO 8620 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-04-11 00:44:55.422  INFO 8620 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2017-04-11 00:44:55.593  INFO 8620 --- [           main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2017-04-11 00:44:55.605  INFO 8620 --- [           main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2017-04-11 00:44:55.819  INFO 8620 --- [           main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 7777 (http)
2017-04-11 00:44:55.824  INFO 8620 --- [           main] com.webservicemaster.iirs.Application    : Started Application in 56.337 seconds (JVM running for 58.395)
2017-04-11 00:46:13.881  INFO 8620 --- [nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-04-11 00:46:13.882  INFO 8620 --- [nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2017-04-11 00:46:13.915  INFO 8620 --- [nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 33 ms
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        friendship0_.friendId as col_0_0_,
        customer1_.customerName as col_1_0_,
        customer1_.customerPhoto as col_2_0_,
        friendship0_.inviteDateTime as col_3_0_ 
    from
        ms_friendlists friendship0_ cross 
    join
        ms_customers customer1_ 
    where
        friendship0_.invitatorId=customer1_.customerId 
        and friendship0_.invitatorId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        friendship0_.friendId as col_0_0_,
        customer1_.customerName as col_1_0_,
        customer1_.customerPhoto as col_2_0_,
        friendship0_.inviteDateTime as col_3_0_ 
    from
        ms_friendlists friendship0_ cross 
    join
        ms_customers customer1_ 
    where
        friendship0_.invitatorId=customer1_.customerId 
        and friendship0_.invitatorId=? 
        and friendship0_.status=0
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.friendId=? 
        and friendship0_.invitatorId=?
Hibernate: 
    update
        ms_friendlists 
    set
        status=?,
        isBlockFutureInvitation=?,
        confirmDateTime=? 
    where
        friendId=?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        viewfriend0_.userId as userId1_14_,
        viewfriend0_.friendId as friendId2_14_,
        viewfriend0_.customerName as customer3_14_,
        viewfriend0_.customerPhoto as customer4_14_,
        viewfriend0_.type as type5_14_ 
    from
        v_friendlist viewfriend0_ 
    where
        viewfriend0_.userId=? 
        and viewfriend0_.type<>'special_just_friend' limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Hibernate: 
    select
        viewfriend0_.userId as userId1_14_,
        viewfriend0_.friendId as friendId2_14_,
        viewfriend0_.customerName as customer3_14_,
        viewfriend0_.customerPhoto as customer4_14_,
        viewfriend0_.type as type5_14_ 
    from
        v_friendlist viewfriend0_ 
    where
        viewfriend0_.userId=? 
        and viewfriend0_.type<>'special_just_friend' limit ?
Hibernate: 
    select
        count(customer0_.customerId) as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.sessionToken=? 
        and customer0_.customerId=?
Hibernate: 
    select
        case 
            when customer0_.tokenExpired>? then 0 
            else 1 
        end as col_0_0_ 
    from
        ms_customers customer0_ 
    where
        customer0_.customerId=?
Hibernate: 
    update
        ms_customers 
    set
        sessionToken=?,
        tokenExpired=? 
    where
        customerId=?
Friend Id : 30
Member Id : 35
Hibernate: 
    select
        count(friendship0_.friendId) as col_0_0_ 
    from
        ms_friendlists friendship0_ 
    where
        friendship0_.invitatorId=? 
        and friendship0_.invitedId=? 
        or friendship0_.invitedId=? 
        and friendship0_.invitatorId=?
